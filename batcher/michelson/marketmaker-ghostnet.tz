{ parameter
    (or (or (or (pair %addVault string address) (address %change_admin_address))
            (or (address %change_batcher_address) (address %change_tokenmanager_address)))
        (or (string %removeVault) (unit %tick))) ;
  storage
    (pair (pair (address %administrator) (address %batcher))
          (address %tokenmanager)
          (pair %vaults (set %keys string) (big_map %values string address))) ;
  code { LAMBDA
           (pair int int)
           int
           { UNPAIR ;
             SWAP ;
             PUSH int 1 ;
             PAIR ;
             LEFT int ;
             LOOP_LEFT
               { UNPAIR ;
                 PUSH int 0 ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; RIGHT (pair int int) }
                    { PUSH int 1 ; DIG 2 ; SUB ; DUP 3 ; DIG 2 ; MUL ; PAIR ; LEFT int } } ;
             SWAP ;
             DROP } ;
         SWAP ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { UNPAIR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH nat 114 ; FAILWITH } ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     COMPARE ;
                     LT ;
                     IF {} { PUSH nat 118 ; FAILWITH } ;
                     DUP 2 ;
                     UNIT ;
                     VIEW "get_native_token_of_vault"
                          (pair (nat %token_id)
                                (string %name)
                                (option %address address)
                                (nat %decimals)
                                (option %standard string)) ;
                     IF_NONE { PUSH nat 164 ; FAILWITH } {} ;
                     DUP 2 ;
                     SWAP ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { DROP 3 ; PUSH nat 163 ; FAILWITH }
                        { DUP 3 ;
                          CDR ;
                          CDR ;
                          DUP 4 ;
                          DIG 4 ;
                          CDR ;
                          DUP 3 ;
                          CAR ;
                          DUP 5 ;
                          MEM ;
                          IF { DUP 3 ; DIG 3 ; CDR ; DIG 5 ; SOME ; DIG 5 ; UPDATE ; UPDATE 2 }
                             { DUP 3 ;
                               DUP 4 ;
                               CAR ;
                               DUP 6 ;
                               PUSH bool True ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 1 ;
                               DIG 3 ;
                               CDR ;
                               DIG 5 ;
                               DIG 5 ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 2 } ;
                          UPDATE 2 ;
                          UPDATE 2 ;
                          NIL operation ;
                          PAIR } }
                   { DUP 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH nat 114 ; FAILWITH } ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     COMPARE ;
                     LT ;
                     IF {} { PUSH nat 118 ; FAILWITH } ;
                     DUP 2 ;
                     DIG 2 ;
                     CAR ;
                     DIG 2 ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DUP 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH nat 114 ; FAILWITH } ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     COMPARE ;
                     LT ;
                     IF {} { PUSH nat 118 ; FAILWITH } ;
                     DUP 2 ;
                     DIG 2 ;
                     CAR ;
                     DIG 2 ;
                     UPDATE 2 ;
                     UPDATE 1 }
                   { DUP 2 ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH nat 114 ; FAILWITH } ;
                     PUSH mutez 1 ;
                     AMOUNT ;
                     COMPARE ;
                     LT ;
                     IF {} { PUSH nat 118 ; FAILWITH } ;
                     DUP 2 ;
                     DIG 2 ;
                     CDR ;
                     DIG 2 ;
                     UPDATE 1 ;
                     UPDATE 2 } ;
                 NIL operation ;
                 PAIR } }
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 DUP 2 ;
                 CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH nat 114 ; FAILWITH } ;
                 PUSH mutez 1 ;
                 AMOUNT ;
                 COMPARE ;
                 LT ;
                 IF {} { PUSH nat 118 ; FAILWITH } ;
                 DUP 2 ;
                 CDR ;
                 CDR ;
                 DUP ;
                 CAR ;
                 DUP 3 ;
                 MEM ;
                 IF { CDR ; DUP 2 ; GET ; IF_NONE { NONE address } { SOME } }
                    { DROP ; NONE address } ;
                 IF_NONE
                   { DROP 2 ; PUSH nat 163 ; FAILWITH }
                   { UNIT ;
                     VIEW "get_native_token_of_vault"
                          (pair (nat %token_id)
                                (string %name)
                                (option %address address)
                                (nat %decimals)
                                (option %standard string)) ;
                     IF_NONE { PUSH nat 164 ; FAILWITH } {} ;
                     DUP 2 ;
                     SWAP ;
                     GET 3 ;
                     COMPARE ;
                     EQ ;
                     NOT ;
                     IF { DROP 2 ; PUSH nat 163 ; FAILWITH }
                        { DUP 2 ;
                          DUP 3 ;
                          CDR ;
                          DIG 3 ;
                          CDR ;
                          CDR ;
                          DUP ;
                          CAR ;
                          DUP 5 ;
                          MEM ;
                          IF { DUP ; CDR ; DIG 4 ; NONE address ; SWAP ; UPDATE ; UPDATE 2 }
                             { DIG 3 ; DROP } ;
                          UPDATE 2 ;
                          UPDATE 2 ;
                          NIL operation ;
                          PAIR } } }
               { DROP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 UNIT ;
                 VIEW "get_current_batches"
                      (list (pair (nat %batch_number)
                                  (or %status
                                     (or (pair %cleared
                                            (pair (timestamp %at)
                                                  (pair %clearing
                                                     (pair %clearing_volumes (nat %minus) (nat %exact) (nat %plus))
                                                     (or %clearing_tolerance (or (unit %exact) (unit %minus)) (unit %plus))
                                                     (pair %total_cleared_volumes
                                                        (nat %buy_side_total_cleared_volume)
                                                        (nat %buy_side_volume_subject_to_clearing)
                                                        (nat %sell_side_total_cleared_volume)
                                                        (nat %sell_side_volume_subject_to_clearing))
                                                     (pair %clearing_rate
                                                        (pair %swap (string %from) (string %to))
                                                        (pair %rate (int %p) (int %q))
                                                        (timestamp %when))))
                                            (pair %rate
                                               (pair %swap (string %from) (string %to))
                                               (pair %rate (int %p) (int %q))
                                               (timestamp %when)))
                                         (pair %closed (timestamp %closing_time) (timestamp %start_time)))
                                     (timestamp %open))
                                  (pair %volumes
                                     (nat %buy_minus_volume)
                                     (nat %buy_exact_volume)
                                     (nat %buy_plus_volume)
                                     (nat %buy_total_volume)
                                     (nat %sell_minus_volume)
                                     (nat %sell_exact_volume)
                                     (nat %sell_plus_volume)
                                     (nat %sell_total_volume))
                                  (pair %pair string string)
                                  (nat %holdings)
                                  (option %market_vault_used address))) ;
                 IF_NONE { PUSH nat 167 ; FAILWITH } {} ;
                 DUP 2 ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 UNIT ;
                 VIEW "get_valid_tokens"
                      (map string
                           (pair (nat %token_id)
                                 (string %name)
                                 (option %address address)
                                 (nat %decimals)
                                 (option %standard string))) ;
                 IF_NONE { PUSH nat 162 ; FAILWITH } {} ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 UNIT ;
                 VIEW "get_valid_swaps"
                      (map string
                           (pair (pair %swap (string %from) (string %to))
                                 (address %oracle_address)
                                 (string %oracle_asset_name)
                                 (nat %oracle_precision)
                                 (bool %is_disabled_for_deposits))) ;
                 IF_NONE { PUSH nat 165 ; FAILWITH } {} ;
                 NIL operation ;
                 DIG 4 ;
                 ITER { SWAP ;
                        DUP 2 ;
                        GET 7 ;
                        UNPAIR ;
                        PUSH nat 0 ;
                        DUP 5 ;
                        GET 5 ;
                        GET 7 ;
                        COMPARE ;
                        EQ ;
                        IF { NONE nat } { DUP 4 ; GET 5 ; GET 7 ; SOME } ;
                        PUSH nat 0 ;
                        DUP 6 ;
                        GET 5 ;
                        GET 14 ;
                        COMPARE ;
                        EQ ;
                        IF { DIG 4 ; DROP ; NONE nat } { DIG 4 ; GET 5 ; GET 14 ; SOME } ;
                        IF_NONE
                          { IF_NONE
                              { DROP 2 }
                              { DUP 7 ;
                                CAR ;
                                DUP 3 ;
                                MEM ;
                                NOT ;
                                IF { DROP 3 }
                                   { DUP 7 ;
                                     CAR ;
                                     DUP 3 ;
                                     MEM ;
                                     IF { DUP 7 ; CDR ; DUP 3 ; GET ; IF_NONE { NONE address } { SOME } }
                                        { NONE address } ;
                                     IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                                     DUP 7 ;
                                     DIG 3 ;
                                     GET ;
                                     IF_NONE
                                       { DROP 4 ; PUSH nat 138 ; FAILWITH }
                                       { DUP 7 ;
                                         DIG 4 ;
                                         GET ;
                                         IF_NONE
                                           { DROP 4 ; PUSH nat 138 ; FAILWITH }
                                           { DIG 4 ;
                                             DUP 2 ;
                                             GET 3 ;
                                             DUP 4 ;
                                             GET 3 ;
                                             DUP 8 ;
                                             DUP 3 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             GT ;
                                             IF { DIG 2 ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT }
                                                { SWAP ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT } ;
                                             GET ;
                                             IF_NONE
                                               { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 ; PUSH nat 117 ; FAILWITH }
                                               { DUP ;
                                                 GET 3 ;
                                                 DUP 2 ;
                                                 GET 5 ;
                                                 VIEW "getPrice" (pair timestamp nat) ;
                                                 IF_NONE { PUSH nat 122 ; FAILWITH } {} ;
                                                 UNPAIR ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 DUP 11 ;
                                                 DUP 2 ;
                                                 CAR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 DUP 12 ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 PUSH nat 1 ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 4 ;
                                                 GET 7 ;
                                                 DUP ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 CAR ;
                                                 GET 7 ;
                                                 COMPARE ;
                                                 GT ;
                                                 IF { DUP 2 ;
                                                      CAR ;
                                                      CAR ;
                                                      GET 7 ;
                                                      SUB ;
                                                      PUSH int 10 ;
                                                      PAIR ;
                                                      DUP 15 ;
                                                      SWAP ;
                                                      EXEC ;
                                                      DIG 3 ;
                                                      MUL ;
                                                      ISNAT ;
                                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      CAR ;
                                                      GET 7 ;
                                                      INT ;
                                                      PUSH int 10 ;
                                                      PAIR ;
                                                      DUP 15 ;
                                                      SWAP ;
                                                      EXEC ;
                                                      SWAP }
                                                    { INT ; PUSH int 10 ; PAIR ; DUP 15 ; SWAP ; EXEC ; DIG 3 } ;
                                                 INT ;
                                                 PUSH int 1 ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 PUSH int 1 ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 DUP 2 ;
                                                 CAR ;
                                                 DUP 2 ;
                                                 CDR ;
                                                 MUL ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 MUL ;
                                                 PAIR ;
                                                 DIG 2 ;
                                                 SWAP ;
                                                 DUP 3 ;
                                                 CDR ;
                                                 GET 3 ;
                                                 DIG 3 ;
                                                 CAR ;
                                                 CAR ;
                                                 GET 3 ;
                                                 PAIR ;
                                                 PAIR 3 ;
                                                 DUP ;
                                                 CAR ;
                                                 DUP 10 ;
                                                 DUP 2 ;
                                                 CAR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 DUP 11 ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 SWAP ;
                                                 GET 7 ;
                                                 SWAP ;
                                                 GET 7 ;
                                                 SUB ;
                                                 DUP ;
                                                 ABS ;
                                                 INT ;
                                                 PUSH int 10 ;
                                                 PAIR ;
                                                 DUP 14 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 PUSH int 0 ;
                                                 DUP 3 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DROP 2 ; PUSH int 1 ; PUSH int 1 }
                                                    { PUSH int 0 ;
                                                      DIG 2 ;
                                                      COMPARE ;
                                                      LT ;
                                                      IF { PUSH int 1 ;
                                                           SWAP ;
                                                           PAIR ;
                                                           PUSH int 1 ;
                                                           PUSH int 1 ;
                                                           PAIR ;
                                                           DUP 2 ;
                                                           CAR ;
                                                           DUP 2 ;
                                                           CDR ;
                                                           MUL ;
                                                           DIG 2 ;
                                                           CDR ;
                                                           DIG 2 ;
                                                           CAR ;
                                                           MUL }
                                                         { PUSH int 1 ; SWAP } } ;
                                                 PAIR ;
                                                 DUP 2 ;
                                                 GET 3 ;
                                                 DUP 2 ;
                                                 CDR ;
                                                 DUP 2 ;
                                                 CDR ;
                                                 MUL ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 MUL ;
                                                 PAIR ;
                                                 UPDATE 3 ;
                                                 SWAP ;
                                                 CAR ;
                                                 CDR ;
                                                 DUP 5 ;
                                                 GET 3 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DIG 5 ;
                                                      INT ;
                                                      SWAP ;
                                                      GET 3 ;
                                                      PUSH int 1 ;
                                                      DIG 2 ;
                                                      PAIR ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      DUP 2 ;
                                                      CDR ;
                                                      MUL ;
                                                      DIG 2 ;
                                                      CDR ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      PAIR ;
                                                      PUSH int 0 ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      COMPARE ;
                                                      LT ;
                                                      IF { PUSH int -1 ; DUP 2 ; CDR ; MUL ; PUSH int -1 ; DIG 2 ; CAR ; MUL ; PAIR }
                                                         {} ;
                                                      DUP ;
                                                      CDR ;
                                                      PUSH nat 1 ;
                                                      PUSH nat 0 ;
                                                      PUSH nat 10 ;
                                                      PAIR ;
                                                      PAIR ;
                                                      LEFT nat ;
                                                      LOOP_LEFT
                                                        { UNPAIR ;
                                                          UNPAIR ;
                                                          PUSH nat 0 ;
                                                          DUP 3 ;
                                                          COMPARE ;
                                                          EQ ;
                                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                             { PUSH nat 1 ;
                                                               PUSH nat 1 ;
                                                               DUP 4 ;
                                                               AND ;
                                                               COMPARE ;
                                                               EQ ;
                                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                               PUSH nat 1 ;
                                                               DIG 3 ;
                                                               LSR ;
                                                               DUP 3 ;
                                                               DIG 3 ;
                                                               MUL ;
                                                               PAIR ;
                                                               PAIR ;
                                                               LEFT nat } } ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      EDIV ;
                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                      CAR ;
                                                      ISNAT ;
                                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                      UNIT ;
                                                      RIGHT unit }
                                                    { DIG 5 ;
                                                      INT ;
                                                      SWAP ;
                                                      GET 3 ;
                                                      PUSH int 1 ;
                                                      DIG 2 ;
                                                      PAIR ;
                                                      DUP 2 ;
                                                      CDR ;
                                                      DUP 2 ;
                                                      CDR ;
                                                      MUL ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      PAIR ;
                                                      PUSH int 0 ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      COMPARE ;
                                                      LT ;
                                                      IF { PUSH int -1 ; DUP 2 ; CDR ; MUL ; PUSH int -1 ; DIG 2 ; CAR ; MUL ; PAIR }
                                                         {} ;
                                                      DUP ;
                                                      CDR ;
                                                      PUSH nat 1 ;
                                                      PUSH nat 0 ;
                                                      PUSH nat 10 ;
                                                      PAIR ;
                                                      PAIR ;
                                                      LEFT nat ;
                                                      LOOP_LEFT
                                                        { UNPAIR ;
                                                          UNPAIR ;
                                                          PUSH nat 0 ;
                                                          DUP 3 ;
                                                          COMPARE ;
                                                          EQ ;
                                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                             { PUSH nat 1 ;
                                                               PUSH nat 1 ;
                                                               DUP 4 ;
                                                               AND ;
                                                               COMPARE ;
                                                               EQ ;
                                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                               PUSH nat 1 ;
                                                               DIG 3 ;
                                                               LSR ;
                                                               DUP 3 ;
                                                               DIG 3 ;
                                                               MUL ;
                                                               PAIR ;
                                                               PAIR ;
                                                               LEFT nat } } ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      EDIV ;
                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                      CAR ;
                                                      ISNAT ;
                                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                      UNIT ;
                                                      LEFT unit } ;
                                                 DIG 5 ;
                                                 CONTRACT %injectliquidity
                                                   (pair (pair (nat %amount)
                                                               (pair %from_token
                                                                  (nat %token_id)
                                                                  (string %name)
                                                                  (option %address address)
                                                                  (nat %decimals)
                                                                  (option %standard string)))
                                                         (or %side (unit %buy) (unit %sell))
                                                         (pair %to_token
                                                            (nat %token_id)
                                                            (string %name)
                                                            (option %address address)
                                                            (nat %decimals)
                                                            (option %standard string))) ;
                                                 IF_NONE { PUSH nat 157 ; FAILWITH } {} ;
                                                 PUSH mutez 0 ;
                                                 DIG 5 ;
                                                 DIG 3 ;
                                                 PAIR ;
                                                 DIG 5 ;
                                                 DIG 4 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 TRANSFER_TOKENS } ;
                                             CONS } } } } }
                          { SWAP ;
                            IF_NONE
                              { DUP 7 ;
                                CAR ;
                                DUP 4 ;
                                MEM ;
                                NOT ;
                                IF { DROP 3 }
                                   { DUP 7 ;
                                     CAR ;
                                     DUP 4 ;
                                     MEM ;
                                     IF { DUP 7 ; CDR ; DUP 4 ; GET ; IF_NONE { NONE address } { SOME } }
                                        { NONE address } ;
                                     IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                                     DUP 7 ;
                                     DIG 4 ;
                                     GET ;
                                     IF_NONE
                                       { DROP 4 ; PUSH nat 138 ; FAILWITH }
                                       { DUP 7 ;
                                         DIG 4 ;
                                         GET ;
                                         IF_NONE
                                           { DROP 4 ; PUSH nat 138 ; FAILWITH }
                                           { DIG 4 ;
                                             DUP 2 ;
                                             GET 3 ;
                                             DUP 4 ;
                                             GET 3 ;
                                             DUP 8 ;
                                             DUP 3 ;
                                             DUP 3 ;
                                             COMPARE ;
                                             GT ;
                                             IF { DIG 2 ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT }
                                                { SWAP ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT } ;
                                             GET ;
                                             IF_NONE
                                               { SWAP ; DIG 2 ; DIG 3 ; DIG 4 ; DROP 4 ; PUSH nat 117 ; FAILWITH }
                                               { DUP ;
                                                 GET 3 ;
                                                 DUP 2 ;
                                                 GET 5 ;
                                                 VIEW "getPrice" (pair timestamp nat) ;
                                                 IF_NONE { PUSH nat 122 ; FAILWITH } {} ;
                                                 UNPAIR ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 DUP 11 ;
                                                 DUP 2 ;
                                                 CAR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 DUP 12 ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 PUSH nat 1 ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 DUP 4 ;
                                                 GET 7 ;
                                                 DUP ;
                                                 DUP 3 ;
                                                 CAR ;
                                                 CAR ;
                                                 GET 7 ;
                                                 COMPARE ;
                                                 GT ;
                                                 IF { DUP 2 ;
                                                      CAR ;
                                                      CAR ;
                                                      GET 7 ;
                                                      SUB ;
                                                      PUSH int 10 ;
                                                      PAIR ;
                                                      DUP 15 ;
                                                      SWAP ;
                                                      EXEC ;
                                                      DIG 3 ;
                                                      MUL ;
                                                      ISNAT ;
                                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      CAR ;
                                                      GET 7 ;
                                                      INT ;
                                                      PUSH int 10 ;
                                                      PAIR ;
                                                      DUP 15 ;
                                                      SWAP ;
                                                      EXEC ;
                                                      SWAP }
                                                    { INT ; PUSH int 10 ; PAIR ; DUP 15 ; SWAP ; EXEC ; DIG 3 } ;
                                                 INT ;
                                                 PUSH int 1 ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 PUSH int 1 ;
                                                 DIG 2 ;
                                                 PAIR ;
                                                 DUP 2 ;
                                                 CAR ;
                                                 DUP 2 ;
                                                 CDR ;
                                                 MUL ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 MUL ;
                                                 PAIR ;
                                                 DIG 2 ;
                                                 SWAP ;
                                                 DUP 3 ;
                                                 CDR ;
                                                 GET 3 ;
                                                 DIG 3 ;
                                                 CAR ;
                                                 CAR ;
                                                 GET 3 ;
                                                 PAIR ;
                                                 PAIR 3 ;
                                                 DUP ;
                                                 CAR ;
                                                 DUP 10 ;
                                                 DUP 2 ;
                                                 CAR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 DUP 11 ;
                                                 DIG 2 ;
                                                 CDR ;
                                                 GET ;
                                                 IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                 SWAP ;
                                                 GET 7 ;
                                                 SWAP ;
                                                 GET 7 ;
                                                 SUB ;
                                                 DUP ;
                                                 ABS ;
                                                 INT ;
                                                 PUSH int 10 ;
                                                 PAIR ;
                                                 DUP 14 ;
                                                 SWAP ;
                                                 EXEC ;
                                                 PUSH int 0 ;
                                                 DUP 3 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DROP 2 ; PUSH int 1 ; PUSH int 1 }
                                                    { PUSH int 0 ;
                                                      DIG 2 ;
                                                      COMPARE ;
                                                      LT ;
                                                      IF { PUSH int 1 ;
                                                           SWAP ;
                                                           PAIR ;
                                                           PUSH int 1 ;
                                                           PUSH int 1 ;
                                                           PAIR ;
                                                           DUP 2 ;
                                                           CAR ;
                                                           DUP 2 ;
                                                           CDR ;
                                                           MUL ;
                                                           DIG 2 ;
                                                           CDR ;
                                                           DIG 2 ;
                                                           CAR ;
                                                           MUL }
                                                         { PUSH int 1 ; SWAP } } ;
                                                 PAIR ;
                                                 DUP 2 ;
                                                 GET 3 ;
                                                 DUP 2 ;
                                                 CDR ;
                                                 DUP 2 ;
                                                 CDR ;
                                                 MUL ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 DIG 2 ;
                                                 CAR ;
                                                 MUL ;
                                                 PAIR ;
                                                 UPDATE 3 ;
                                                 SWAP ;
                                                 CAR ;
                                                 CDR ;
                                                 DUP 5 ;
                                                 GET 3 ;
                                                 COMPARE ;
                                                 EQ ;
                                                 IF { DIG 5 ;
                                                      INT ;
                                                      SWAP ;
                                                      GET 3 ;
                                                      PUSH int 1 ;
                                                      DIG 2 ;
                                                      PAIR ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      DUP 2 ;
                                                      CDR ;
                                                      MUL ;
                                                      DIG 2 ;
                                                      CDR ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      PAIR ;
                                                      PUSH int 0 ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      COMPARE ;
                                                      LT ;
                                                      IF { PUSH int -1 ; DUP 2 ; CDR ; MUL ; PUSH int -1 ; DIG 2 ; CAR ; MUL ; PAIR }
                                                         {} ;
                                                      DUP ;
                                                      CDR ;
                                                      PUSH nat 1 ;
                                                      PUSH nat 0 ;
                                                      PUSH nat 10 ;
                                                      PAIR ;
                                                      PAIR ;
                                                      LEFT nat ;
                                                      LOOP_LEFT
                                                        { UNPAIR ;
                                                          UNPAIR ;
                                                          PUSH nat 0 ;
                                                          DUP 3 ;
                                                          COMPARE ;
                                                          EQ ;
                                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                             { PUSH nat 1 ;
                                                               PUSH nat 1 ;
                                                               DUP 4 ;
                                                               AND ;
                                                               COMPARE ;
                                                               EQ ;
                                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                               PUSH nat 1 ;
                                                               DIG 3 ;
                                                               LSR ;
                                                               DUP 3 ;
                                                               DIG 3 ;
                                                               MUL ;
                                                               PAIR ;
                                                               PAIR ;
                                                               LEFT nat } } ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      EDIV ;
                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                      CAR ;
                                                      ISNAT ;
                                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                      UNIT ;
                                                      RIGHT unit }
                                                    { DIG 5 ;
                                                      INT ;
                                                      SWAP ;
                                                      GET 3 ;
                                                      PUSH int 1 ;
                                                      DIG 2 ;
                                                      PAIR ;
                                                      DUP 2 ;
                                                      CDR ;
                                                      DUP 2 ;
                                                      CDR ;
                                                      MUL ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      PAIR ;
                                                      PUSH int 0 ;
                                                      DUP 2 ;
                                                      CAR ;
                                                      COMPARE ;
                                                      LT ;
                                                      IF { PUSH int -1 ; DUP 2 ; CDR ; MUL ; PUSH int -1 ; DIG 2 ; CAR ; MUL ; PAIR }
                                                         {} ;
                                                      DUP ;
                                                      CDR ;
                                                      PUSH nat 1 ;
                                                      PUSH nat 0 ;
                                                      PUSH nat 10 ;
                                                      PAIR ;
                                                      PAIR ;
                                                      LEFT nat ;
                                                      LOOP_LEFT
                                                        { UNPAIR ;
                                                          UNPAIR ;
                                                          PUSH nat 0 ;
                                                          DUP 3 ;
                                                          COMPARE ;
                                                          EQ ;
                                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                             { PUSH nat 1 ;
                                                               PUSH nat 1 ;
                                                               DUP 4 ;
                                                               AND ;
                                                               COMPARE ;
                                                               EQ ;
                                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                               PUSH nat 1 ;
                                                               DIG 3 ;
                                                               LSR ;
                                                               DUP 3 ;
                                                               DIG 3 ;
                                                               MUL ;
                                                               PAIR ;
                                                               PAIR ;
                                                               LEFT nat } } ;
                                                      DIG 2 ;
                                                      CAR ;
                                                      MUL ;
                                                      EDIV ;
                                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                      CAR ;
                                                      ISNAT ;
                                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                      UNIT ;
                                                      LEFT unit } ;
                                                 DIG 5 ;
                                                 CONTRACT %injectliquidity
                                                   (pair (pair (nat %amount)
                                                               (pair %from_token
                                                                  (nat %token_id)
                                                                  (string %name)
                                                                  (option %address address)
                                                                  (nat %decimals)
                                                                  (option %standard string)))
                                                         (or %side (unit %buy) (unit %sell))
                                                         (pair %to_token
                                                            (nat %token_id)
                                                            (string %name)
                                                            (option %address address)
                                                            (nat %decimals)
                                                            (option %standard string))) ;
                                                 IF_NONE { PUSH nat 157 ; FAILWITH } {} ;
                                                 PUSH mutez 0 ;
                                                 DIG 5 ;
                                                 DIG 3 ;
                                                 PAIR ;
                                                 DIG 5 ;
                                                 DIG 4 ;
                                                 PAIR ;
                                                 PAIR ;
                                                 TRANSFER_TOKENS } ;
                                             CONS } } } }
                              { DROP 4 } } } ;
                 SWAP ;
                 DIG 2 ;
                 DIG 3 ;
                 DIG 5 ;
                 DROP 4 ;
                 PAIR } } } }

