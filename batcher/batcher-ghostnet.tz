{ parameter
    (or (or (or (or (pair %add_or_update_metadata (string %key) (bytes %value))
                    (pair %add_token_swap_pair
                       (pair %swap
                          (pair %from
                             (pair %token
                                (nat %token_id)
                                (string %name)
                                (option %address address)
                                (nat %decimals)
                                (option %standard string))
                             (nat %amount))
                          (pair %to
                             (nat %token_id)
                             (string %name)
                             (option %address address)
                             (nat %decimals)
                             (option %standard string)))
                       (address %oracle_address)
                       (string %oracle_asset_name)
                       (nat %oracle_precision)
                       (bool %is_disabled_for_deposits)))
                (or (nat %amend_token_and_pair_limit) (pair %cancel string string)))
            (or (or (address %change_admin_address) (nat %change_deposit_time_window))
                (or (mutez %change_fee)
                    (pair %change_oracle_source_of_pair
                       (string %pair_name)
                       (address %oracle_address)
                       (string %oracle_asset_name)
                       (nat %oracle_precision)))))
        (or (or (or (nat %change_scale_factor)
                    (pair %deposit
                       (pair %swap
                          (pair %from
                             (pair %token
                                (nat %token_id)
                                (string %name)
                                (option %address address)
                                (nat %decimals)
                                (option %standard string))
                             (nat %amount))
                          (pair %to
                             (nat %token_id)
                             (string %name)
                             (option %address address)
                             (nat %decimals)
                             (option %standard string)))
                       (timestamp %created_at)
                       (nat %side)
                       (nat %tolerance)))
                (or (string %disable_swap_pair_for_deposit) (string %enable_swap_pair_for_deposit)))
            (or (or (unit %redeem) (string %remove_metadata))
                (or (pair %remove_token_swap_pair
                       (pair %swap
                          (pair %from
                             (pair %token
                                (nat %token_id)
                                (string %name)
                                (option %address address)
                                (nat %decimals)
                                (option %standard string))
                             (nat %amount))
                          (pair %to
                             (nat %token_id)
                             (string %name)
                             (option %address address)
                             (nat %decimals)
                             (option %standard string)))
                       (address %oracle_address)
                       (string %oracle_asset_name)
                       (nat %oracle_precision)
                       (bool %is_disabled_for_deposits))
                    (string %tick))))) ;
  storage
    (pair (pair (pair (pair (address %administrator)
                            (pair %batch_set
                               (map %current_batch_indices string nat)
                               (big_map %batches
                                  nat
                                  (pair (nat %batch_number)
                                        (or %status
                                           (or (pair %cleared
                                                  (pair (timestamp %at)
                                                        (pair %clearing
                                                           (pair %clearing_volumes (nat %minus) (nat %exact) (nat %plus))
                                                           (or %clearing_tolerance (or (unit %exact) (unit %minus)) (unit %plus))
                                                           (pair %total_cleared_volumes
                                                              (nat %buy_side_total_cleared_volume)
                                                              (nat %buy_side_volume_subject_to_clearing)
                                                              (nat %sell_side_total_cleared_volume)
                                                              (nat %sell_side_volume_subject_to_clearing))
                                                           (pair %clearing_rate
                                                              (pair %swap (string %from) (string %to))
                                                              (pair %rate (int %p) (int %q))
                                                              (timestamp %when))))
                                                  (pair %rate
                                                     (pair %swap (string %from) (string %to))
                                                     (pair %rate (int %p) (int %q))
                                                     (timestamp %when)))
                                               (pair %closed (timestamp %closing_time) (timestamp %start_time)))
                                           (timestamp %open))
                                        (pair %volumes
                                           (nat %buy_minus_volume)
                                           (nat %buy_exact_volume)
                                           (nat %buy_plus_volume)
                                           (nat %buy_total_volume)
                                           (nat %sell_minus_volume)
                                           (nat %sell_exact_volume)
                                           (nat %sell_plus_volume)
                                           (nat %sell_total_volume))
                                        (pair %pair string string)
                                        (nat %holdings)))))
                      (nat %deposit_time_window_in_seconds)
                      (mutez %fee_in_mutez))
                (pair (address %fee_recipient) (nat %last_order_number))
                (nat %limit_on_tokens_or_pairs)
                (big_map %metadata string bytes))
          (pair (pair (big_map %rates_current
                         string
                         (pair (pair %swap (string %from) (string %to))
                               (pair %rate (int %p) (int %q))
                               (timestamp %when)))
                      (nat %scale_factor_for_oracle_staleness))
                (big_map %user_batch_ordertypes
                   address
                   (map nat
                        (map (pair (or %side (unit %buy) (unit %sell))
                                   (or %tolerance (or (unit %exact) (unit %minus)) (unit %plus)))
                             nat)))
                (map %valid_swaps
                   string
                   (pair (pair %swap (string %from) (string %to))
                         (address %oracle_address)
                         (string %oracle_asset_name)
                         (nat %oracle_precision)
                         (bool %is_disabled_for_deposits))))
          (map %valid_tokens
             string
             (pair (nat %token_id)
                   (string %name)
                   (option %address address)
                   (nat %decimals)
                   (option %standard string)))) ;
  code { PUSH int 1 ;
         PUSH int 10000 ;
         PAIR ;
         PUSH int 1 ;
         PUSH int 10001 ;
         PAIR ;
         DUP 2 ;
         CAR ;
         DUP 2 ;
         CDR ;
         MUL ;
         DIG 2 ;
         CDR ;
         DIG 2 ;
         CAR ;
         MUL ;
         PAIR ;
         LAMBDA
           (pair (pair (pair nat string (option address) nat (option string)) nat)
                 (map string (pair (pair nat string (option address) nat (option string)) nat)))
           (map string (pair (pair nat string (option address) nat (option string)) nat))
           { UNPAIR ;
             SWAP ;
             UNIT ;
             RIGHT unit ;
             DIG 2 ;
             DUP ;
             CAR ;
             GET 3 ;
             DUP 4 ;
             DUP 2 ;
             GET ;
             IF_NONE
               { DIG 2 ; DROP ; SWAP ; SOME ; SWAP ; UPDATE }
               { DIG 3 ;
                 IF_LEFT
                   { DROP ;
                     DUP ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     COMPARE ;
                     GT ;
                     IF { DROP ; PUSH nat 111 ; FAILWITH }
                        { DUP 3 ; CDR ; SWAP ; CDR ; SUB ; ABS } }
                   { DROP ; CDR ; DUP 3 ; CDR ; ADD } ;
                 DIG 3 ;
                 DIG 3 ;
                 DIG 2 ;
                 UPDATE 2 ;
                 SOME ;
                 DIG 2 ;
                 UPDATE } } ;
         LAMBDA
           (pair int int)
           int
           { UNPAIR ;
             SWAP ;
             PUSH int 1 ;
             PAIR ;
             LEFT int ;
             LOOP_LEFT
               { UNPAIR ;
                 PUSH int 0 ;
                 DUP 3 ;
                 COMPARE ;
                 EQ ;
                 IF { SWAP ; DROP ; RIGHT (pair int int) }
                    { PUSH int 1 ; DIG 2 ; SUB ; DUP 3 ; DIG 2 ; MUL ; PAIR ; LEFT int } } ;
             SWAP ;
             DROP } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { DIG 2 ;
             DIG 4 ;
             DROP 2 ;
             IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         DUP 3 ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DUP 6 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DUP 6 ;
                         CAR ;
                         GET ;
                         IF_NONE
                           { DIG 5 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DUP 6 ;
                             CDR ;
                             DIG 6 ;
                             CAR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE }
                           { DROP ;
                             DIG 5 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             DUP 6 ;
                             CDR ;
                             SOME ;
                             DIG 6 ;
                             CAR ;
                             UPDATE } ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         NIL operation ;
                         PAIR }
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         PUSH nat 6 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         GET 7 ;
                         COMPARE ;
                         LT ;
                         IF { DROP 2 ; PUSH nat 134 ; FAILWITH }
                            { PUSH nat 6 ;
                              DUP 2 ;
                              CAR ;
                              CDR ;
                              GET 7 ;
                              COMPARE ;
                              LT ;
                              IF { DROP 2 ; PUSH nat 134 ; FAILWITH }
                                 { PUSH nat 6 ;
                                   DUP 2 ;
                                   GET 7 ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { DROP 2 ; PUSH nat 133 ; FAILWITH }
                                      { DUP 2 ;
                                        CDR ;
                                        CDR ;
                                        DUP 3 ;
                                        CDR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        CAR ;
                                        DUP 4 ;
                                        CAR ;
                                        DUP ;
                                        CAR ;
                                        CAR ;
                                        DUP 2 ;
                                        CDR ;
                                        DUP 4 ;
                                        PUSH nat 1 ;
                                        DUP 7 ;
                                        SIZE ;
                                        ADD ;
                                        COMPARE ;
                                        GT ;
                                        IF { DIG 3 ; DROP ; PUSH nat 127 ; FAILWITH }
                                           { PUSH bool False ;
                                             DUP 7 ;
                                             ITER { CDR ;
                                                    SWAP ;
                                                    DUP 2 ;
                                                    GET 8 ;
                                                    DUP 5 ;
                                                    GET 8 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DUP 3 ;
                                                    GET 7 ;
                                                    DUP 6 ;
                                                    GET 7 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DUP 4 ;
                                                    GET 5 ;
                                                    DUP 7 ;
                                                    GET 5 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DUP 5 ;
                                                    GET 3 ;
                                                    DUP 8 ;
                                                    GET 3 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DIG 5 ;
                                                    CAR ;
                                                    DUP 8 ;
                                                    CAR ;
                                                    COMPARE ;
                                                    EQ ;
                                                    AND ;
                                                    AND ;
                                                    AND ;
                                                    AND ;
                                                    OR } ;
                                             PUSH bool False ;
                                             DUP 8 ;
                                             ITER { CDR ;
                                                    SWAP ;
                                                    DUP 2 ;
                                                    GET 8 ;
                                                    DUP 5 ;
                                                    GET 8 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DUP 3 ;
                                                    GET 7 ;
                                                    DUP 6 ;
                                                    GET 7 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DUP 4 ;
                                                    GET 5 ;
                                                    DUP 7 ;
                                                    GET 5 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DUP 5 ;
                                                    GET 3 ;
                                                    DUP 8 ;
                                                    GET 3 ;
                                                    COMPARE ;
                                                    EQ ;
                                                    DIG 5 ;
                                                    CAR ;
                                                    DUP 8 ;
                                                    CAR ;
                                                    COMPARE ;
                                                    EQ ;
                                                    AND ;
                                                    AND ;
                                                    AND ;
                                                    AND ;
                                                    OR } ;
                                             AND ;
                                             IF { PUSH nat 0 }
                                                { PUSH bool False ;
                                                  DUP 7 ;
                                                  ITER { CDR ;
                                                         SWAP ;
                                                         DUP 2 ;
                                                         GET 8 ;
                                                         DUP 5 ;
                                                         GET 8 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DUP 3 ;
                                                         GET 7 ;
                                                         DUP 6 ;
                                                         GET 7 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DUP 4 ;
                                                         GET 5 ;
                                                         DUP 7 ;
                                                         GET 5 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DUP 5 ;
                                                         GET 3 ;
                                                         DUP 8 ;
                                                         GET 3 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DIG 5 ;
                                                         CAR ;
                                                         DUP 8 ;
                                                         CAR ;
                                                         COMPARE ;
                                                         EQ ;
                                                         AND ;
                                                         AND ;
                                                         AND ;
                                                         AND ;
                                                         OR } ;
                                                  PUSH bool False ;
                                                  DUP 8 ;
                                                  ITER { CDR ;
                                                         SWAP ;
                                                         DUP 2 ;
                                                         GET 8 ;
                                                         DUP 5 ;
                                                         GET 8 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DUP 3 ;
                                                         GET 7 ;
                                                         DUP 6 ;
                                                         GET 7 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DUP 4 ;
                                                         GET 5 ;
                                                         DUP 7 ;
                                                         GET 5 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DUP 5 ;
                                                         GET 3 ;
                                                         DUP 8 ;
                                                         GET 3 ;
                                                         COMPARE ;
                                                         EQ ;
                                                         DIG 5 ;
                                                         CAR ;
                                                         DUP 8 ;
                                                         CAR ;
                                                         COMPARE ;
                                                         EQ ;
                                                         AND ;
                                                         AND ;
                                                         AND ;
                                                         AND ;
                                                         OR } ;
                                                  OR ;
                                                  IF { PUSH nat 1 } { PUSH nat 2 } } ;
                                             DIG 4 ;
                                             SWAP ;
                                             DUP 7 ;
                                             SIZE ;
                                             ADD ;
                                             COMPARE ;
                                             GT ;
                                             IF { PUSH nat 126 ; FAILWITH } {} } ;
                                        DUP 3 ;
                                        CDR ;
                                        GET 3 ;
                                        DIG 3 ;
                                        CAR ;
                                        CAR ;
                                        GET 3 ;
                                        PAIR ;
                                        DUP 4 ;
                                        DUP 2 ;
                                        CAR ;
                                        DIG 2 ;
                                        CDR ;
                                        DUP 2 ;
                                        DUP 2 ;
                                        COMPARE ;
                                        GT ;
                                        IF { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                           { PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                        GET ;
                                        IF_NONE
                                          { DUP 4 ;
                                            DUP 3 ;
                                            GET 3 ;
                                            GET ;
                                            IF_NONE
                                              { DIG 3 ; DUP 3 ; DIG 3 ; GET 3 ; SWAP ; SOME ; SWAP ; UPDATE }
                                              { DUP 3 ;
                                                GET 8 ;
                                                DUP 2 ;
                                                GET 8 ;
                                                COMPARE ;
                                                EQ ;
                                                DUP 4 ;
                                                GET 7 ;
                                                DUP 3 ;
                                                GET 7 ;
                                                COMPARE ;
                                                EQ ;
                                                DUP 5 ;
                                                GET 5 ;
                                                DUP 4 ;
                                                GET 5 ;
                                                COMPARE ;
                                                EQ ;
                                                DUP 6 ;
                                                GET 3 ;
                                                DUP 5 ;
                                                GET 3 ;
                                                COMPARE ;
                                                EQ ;
                                                DIG 6 ;
                                                CAR ;
                                                DIG 5 ;
                                                CAR ;
                                                COMPARE ;
                                                EQ ;
                                                AND ;
                                                AND ;
                                                AND ;
                                                AND ;
                                                IF { DIG 2 } { DIG 2 ; DROP ; PUSH nat 115 ; FAILWITH } } ;
                                            DUP ;
                                            DUP 3 ;
                                            GET 3 ;
                                            GET ;
                                            IF_NONE
                                              { DUP 2 ; DIG 2 ; GET 3 ; SWAP ; SOME ; SWAP ; UPDATE }
                                              { DUP 3 ;
                                                GET 8 ;
                                                DUP 2 ;
                                                GET 8 ;
                                                COMPARE ;
                                                EQ ;
                                                DUP 4 ;
                                                GET 7 ;
                                                DUP 3 ;
                                                GET 7 ;
                                                COMPARE ;
                                                EQ ;
                                                DUP 5 ;
                                                GET 5 ;
                                                DUP 4 ;
                                                GET 5 ;
                                                COMPARE ;
                                                EQ ;
                                                DUP 6 ;
                                                GET 3 ;
                                                DUP 5 ;
                                                GET 3 ;
                                                COMPARE ;
                                                EQ ;
                                                DIG 6 ;
                                                CAR ;
                                                DIG 5 ;
                                                CAR ;
                                                COMPARE ;
                                                EQ ;
                                                AND ;
                                                AND ;
                                                AND ;
                                                AND ;
                                                IF {} { DROP ; PUSH nat 115 ; FAILWITH } } ;
                                            DUP 3 ;
                                            CAR ;
                                            DUP ;
                                            CDR ;
                                            GET 3 ;
                                            SWAP ;
                                            CAR ;
                                            CAR ;
                                            GET 3 ;
                                            SWAP ;
                                            DIG 3 ;
                                            DUP 5 ;
                                            GET 8 ;
                                            DUP 6 ;
                                            GET 7 ;
                                            DUP 7 ;
                                            GET 5 ;
                                            DUP 8 ;
                                            GET 3 ;
                                            DIG 8 ;
                                            CAR ;
                                            DUP ;
                                            CDR ;
                                            GET 3 ;
                                            SWAP ;
                                            CAR ;
                                            CAR ;
                                            GET 3 ;
                                            PAIR ;
                                            PAIR 5 ;
                                            DUP 4 ;
                                            DUP 4 ;
                                            COMPARE ;
                                            GT ;
                                            IF { DIG 3 ; PUSH string "/" ; CONCAT ; DIG 3 ; CONCAT }
                                               { DIG 2 ; PUSH string "/" ; CONCAT ; DIG 3 ; CONCAT } ;
                                            SWAP ;
                                            SOME ;
                                            SWAP ;
                                            UPDATE ;
                                            PAIR }
                                          { DROP 6 ; PUSH nat 116 ; FAILWITH } ;
                                        UNPAIR ;
                                        DUP 3 ;
                                        DIG 3 ;
                                        CDR ;
                                        DUP ;
                                        CAR ;
                                        DUP ;
                                        CDR ;
                                        DIG 4 ;
                                        UPDATE 2 ;
                                        UPDATE 2 ;
                                        UPDATE 1 ;
                                        UPDATE 2 ;
                                        DUP ;
                                        CDR ;
                                        DIG 2 ;
                                        UPDATE 2 ;
                                        UPDATE 2 ;
                                        NIL operation ;
                                        PAIR } } } } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         CDR ;
                         CDR ;
                         SIZE ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { DROP 2 ; PUSH nat 128 ; FAILWITH }
                            { DUP 2 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              SIZE ;
                              DUP 2 ;
                              COMPARE ;
                              LT ;
                              IF { DROP 2 ; PUSH nat 129 ; FAILWITH }
                                 { DUP 2 ;
                                   DIG 2 ;
                                   CAR ;
                                   DUP ;
                                   CDR ;
                                   DUP ;
                                   CDR ;
                                   DIG 4 ;
                                   UPDATE 1 ;
                                   UPDATE 2 ;
                                   UPDATE 2 ;
                                   UPDATE 1 ;
                                   NIL operation ;
                                   PAIR } } }
                       { PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         SENDER ;
                         DUP 2 ;
                         UNPAIR ;
                         DUP 5 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         DUP 3 ;
                         COMPARE ;
                         GT ;
                         IF { DIG 2 ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT }
                            { SWAP ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT } ;
                         GET ;
                         IF_NONE
                           { DROP 4 ; PUSH nat 117 ; FAILWITH }
                           { DUP 4 ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             DUP 2 ;
                             DUP 2 ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             DUG 2 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             NOW ;
                             DUP 7 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DUP 8 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DUP 9 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DUP 9 ;
                             UNPAIR ;
                             DUP ;
                             DUP 3 ;
                             COMPARE ;
                             GT ;
                             IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                             GET ;
                             IF_NONE { PUSH nat 0 } {} ;
                             GET ;
                             IF_NONE
                               { DROP ;
                                 DUP 7 ;
                                 CAR ;
                                 CAR ;
                                 CAR ;
                                 CDR ;
                                 PUSH nat 0 ;
                                 DUP 2 ;
                                 CAR ;
                                 ITER { CDR ; DUP 2 ; DUP 2 ; COMPARE ; GT ; IF { SWAP ; DROP } { DROP } } ;
                                 PUSH nat 1 ;
                                 ADD ;
                                 DIG 7 ;
                                 PUSH nat 0 ;
                                 PUSH nat 0 ;
                                 PUSH nat 0 ;
                                 PUSH nat 0 ;
                                 PUSH nat 0 ;
                                 PUSH nat 0 ;
                                 PUSH nat 0 ;
                                 PUSH nat 0 ;
                                 PAIR 8 ;
                                 DIG 4 ;
                                 RIGHT
                                   (or (pair (pair timestamp
                                                   (pair (pair nat nat nat)
                                                         (or (or unit unit) unit)
                                                         (pair nat nat nat nat)
                                                         (pair (pair string string) (pair int int) timestamp)))
                                             (pair (pair string string) (pair int int) timestamp))
                                       (pair timestamp timestamp)) ;
                                 DIG 3 ;
                                 PAIR 4 ;
                                 DUP 2 ;
                                 DUP 3 ;
                                 CDR ;
                                 DUP 3 ;
                                 SOME ;
                                 DUP 4 ;
                                 CAR ;
                                 UPDATE ;
                                 UPDATE 2 ;
                                 DIG 2 ;
                                 CAR ;
                                 DUP 3 ;
                                 CAR ;
                                 SOME ;
                                 DUP 4 ;
                                 GET 6 ;
                                 UNPAIR ;
                                 DUP ;
                                 DUP 3 ;
                                 COMPARE ;
                                 GT ;
                                 IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                    { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                 UPDATE ;
                                 UPDATE 1 }
                               { DUP ;
                                 GET 3 ;
                                 IF_LEFT
                                   { DIG 2 ;
                                     DROP ;
                                     IF_LEFT
                                       { DROP 2 ;
                                         DUP 7 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         PUSH nat 0 ;
                                         DUP 2 ;
                                         CAR ;
                                         ITER { CDR ; DUP 2 ; DUP 2 ; COMPARE ; GT ; IF { SWAP ; DROP } { DROP } } ;
                                         PUSH nat 1 ;
                                         ADD ;
                                         DIG 7 
                                         PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         PUSH nat 0 ;
                                         PAIR 8 ;
                                         DIG 4 ;
                                         RIGHT
                                           (or (pair (pair timestamp
                                                           (pair (pair nat nat nat)
                                                                 (or (or unit unit) unit)
                                                                 (pair nat nat nat nat)
                                                                 (pair (pair string string) (pair int int) timestamp)))
                                                     (pair (pair string string) (pair int int) timestamp))
                                               (pair timestamp timestamp)) ;
                                         DIG 3 ;
                                         PAIR 4 ;
                                         DUP 2 ;
                                         DUP 3 ;
                                         CDR ;
                                         DUP 3 ;
                                         SOME ;
                                         DUP 4 ;
                                         CAR ;
                                         UPDATE ;
                                         UPDATE 2 ;
                                         DIG 2 ;
                                         CAR ;
                                         DUP 3 ;
                                         CAR ;
                                         SOME ;
                                         DUP 4 ;
                                         GET 6 ;
                                         UNPAIR ;
                                         DUP ;
                                         DUP 3 ;
                                         COMPARE ;
                                         GT ;
                                         IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                            { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                         UPDATE ;
                                         UPDATE 1 }
                                       { DIG 2 ; DIG 7 ; DROP 3 ; DUP 6 ; CAR ; CAR ; CAR ; CDR } }
                                   { DIG 8 ;
                                     DROP ;
                                     DUP 3 ;
                                     INT ;
                                     ADD ;
                                     DIG 3 ;
                                     COMPARE ;
                                     GE ;
                                     IF { DUP ;
                                          GET 3 ;
                                          IF_LEFT
                                            { SWAP ;
                                              DIG 2 ;
                                              DROP 2 ;
                                              IF_LEFT
                                                { DROP ; PUSH nat 105 ; FAILWITH }
                                                { DROP ; PUSH nat 105 ; FAILWITH } }
                                            { DIG 2 ;
                                              INT ;
                                              DUP 2 ;
                                              ADD ;
                                              PAIR ;
                                              RIGHT
                                                (pair (pair timestamp
                                                            (pair (pair nat nat nat)
                                                                  (or (or unit unit) unit)
                                                                  (pair nat nat nat nat)
                                                                  (pair (pair string string) (pair int int) timestamp)))
                                                      (pair (pair string string) (pair int int) timestamp)) ;
                                              LEFT timestamp ;
                                              UPDATE 3 } ;
                                          DUP 6 ;
                                          CAR ;
                                          CAR ;
                                          CAR ;
                                          CDR ;
                                          DUP ;
                                          DUP 2 ;
                                          CDR ;
                                          DUP 4 ;
                                          SOME ;
                                          DUP 5 ;
                                          CAR ;
                                          UPDATE ;
                                          UPDATE 2 ;
                                          SWAP ;
                                          CAR ;
                                          DUP 3 ;
                                          CAR ;
                                          SOME ;
                                          DUP 4 ;
                                          GET 6 ;
                                          UNPAIR ;
                                          DUP ;
                                          DUP 3 ;
                                          COMPARE ;
                                          GT ;
                                          IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                             { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                          UPDATE ;
                                          UPDATE 1 }
                                        { SWAP ; DROP ; DUP 6 ; CAR ; CAR ; CAR ; CDR } } } ;
                             SWAP ;
                             DUP ;
                             GET 3 ;
                             IF_LEFT
                               { IF_LEFT { DROP ; PUSH bool False } { DROP ; PUSH bool False } }
                               { DROP ; PUSH bool True } ;
                             NOT ;
                             IF { PUSH nat 140 ; FAILWITH } {} ;
                             DUP 7 ;
                             CDR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DUP 7 ;
                             GET ;
                             IF_NONE
                               { DROP 8 ; PUSH nat 139 ; FAILWITH }
                               { DUP 2 ;
                                 CAR ;
                                 DUP 2 ;
                                 DUP 2 ;
                                 GET ;
                                 IF_NONE
                                   { SWAP ; DIG 8 ; DROP 3 ; PUSH nat 139 ; FAILWITH }
                                   { DUP 10 ;
                                     DUP 11 ;
                                     CDR ;
                                     DUP ;
                                     CAR ;
                                     DUP ;
                                     CDR ;
                                     DIG 13 ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     CAR ;
                                     DIG 7 ;
                                     DIG 7 ;
                                     NONE (map (pair (or unit unit) (or (or unit unit) unit)) nat) ;
                                     SWAP ;
                                     UPDATE ;
                                     SOME ;
                                     DUP 13 ;
                                     UPDATE ;
                                     UPDATE 1 ;
                                     UPDATE 2 ;
                                     UPDATE 1 ;
                                     UPDATE 2 ;
                                     SWAP ;
                                     PAIR } ;
                                 UNPAIR ;
                                 DUP 3 ;
                                 GET 5 ;
                                 DUP 2 ;
                                 ITER { UNPAIR ;
                                        UNPAIR ;
                                        IF_LEFT
                                          { DROP ;
                                            DUP 2 ;
                                            DUP 4 ;
                                            GET 7 ;
                                            SUB ;
                                            ABS ;
                                            SWAP ;
                                            IF_LEFT
                                              { IF_LEFT
                                                  { DROP ;
                                                    DUP 3 ;
                                                    DIG 2 ;
                                                    DIG 3 ;
                                                    GET 3 ;
                                                    SUB ;
                                                    ABS ;
                                                    UPDATE 3 ;
                                                    SWAP ;
                                                    UPDATE 7 }
                                                  { DROP ;
                                                    DUP 3 ;
                                                    DIG 2 ;
                                                    DIG 3 ;
                                                    CAR ;
                                                    SUB ;
                                                    ABS ;
                                                    UPDATE 1 ;
                                                    SWAP ;
                                                    UPDATE 7 } }
                                              { DROP ;
                                                DUP 3 ;
                                                DIG 2 ;
                                                DIG 3 ;
                                                GET 5 ;
                                                SUB ;
                                                ABS ;
                                                UPDATE 5 ;
                                                SWAP ;
                                                UPDATE 7 } }
                                          { DROP ;
                                            DUP 2 ;
                                            DUP 4 ;
                                            GET 14 ;
                                            SUB ;
                                            ABS ;
                                            SWAP ;
                                            IF_LEFT
                                              { IF_LEFT
                                                  { DROP ;
                                                    DUP 3 ;
                                                    DIG 2 ;
                                                    DIG 3 ;
                                                    GET 11 ;
                                                    SUB ;
                                                    ABS ;
                                                    UPDATE 11 ;
                                                    SWAP ;
                                                    UPDATE 14 }
                                                  { DROP ;
                                                    DUP 3 ;
                                                    DIG 2 ;
                                                    DIG 3 ;
                                                    GET 9 ;
                                                    SUB ;
                                                    ABS ;
                                                    UPDATE 9 ;
                                                    SWAP ;
                                                    UPDATE 14 } }
                                              { DROP ;
                                                DUP 3 ;
                                                DIG 2 ;
                                                DIG 3 ;
                                                GET 13 ;
                                                SUB ;
                                                ABS ;
                                                UPDATE 13 ;
                                                SWAP ;
                                                UPDATE 14 } } } ;
                                 DIG 3 ;
                                 SWAP ;
                                 UPDATE 5 ;
                                 DUP 3 ;
                                 DIG 3 ;
                                 CAR ;
                                 DUP ;
                                 CAR ;
                                 DUP ;
                                 CAR ;
                                 DUP 7 ;
                                 DIG 7 ;
                                 CDR ;
                                 DUP 7 ;
                                 SOME ;
                                 DIG 7 ;
                                 CAR ;
                                 UPDATE ;
                                 UPDATE 2 ;
                                 UPDATE 2 ;
                                 UPDATE 1 ;
                                 UPDATE 1 ;
                                 UPDATE 1 ;
                                 DUP 5 ;
                                 GET 8 ;
                                 DUP 6 ;
                                 GET 7 ;
                                 DUP 7 ;
                                 GET 5 ;
                                 DIG 7 ;
                                 GET 3 ;
                                 DIG 6 ;
                                 PUSH nat 1 ;
                                 DIG 8 ;
                                 PAIR ;
                                 PAIR ;
                                 PAIR 5 ;
                                 PUSH mutez 0 ;
                                 EMPTY_MAP string (pair (pair nat string (option address) nat (option string)) nat) ;
                                 PAIR ;
                                 DIG 3 ;
                                 ITER { SWAP ;
                                        UNPAIR ;
                                        DIG 2 ;
                                        UNPAIR ;
                                        CAR ;
                                        IF_LEFT { DROP ; DUP 4 ; CAR ; CAR ; CAR } { DROP ; DUP 4 ; CAR ; CDR } ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 6 ;
                                        SWAP ;
                                        EXEC ;
                                        DUP 4 ;

                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DIG 2 ;
                                        ADD ;
                                        SWAP ;
                                        PAIR } ;
                                 SWAP ;
                                 DIG 4 ;
                                 DROP 2 ;
                                 UNPAIR ;
                                 SELF_ADDRESS ;
                                 NIL operation ;
                                 DIG 2 ;
                                 ITER { CDR ;
                                        DUP ;
                                        CAR ;
                                        GET 5 ;
                                        IF_NONE
                                          { DROP ; PUSH nat 109 ; FAILWITH }
                                          { DUP 2 ;
                                            CAR ;
                                            GET 8 ;
                                            IF_NONE
                                              { DROP 2 ; PUSH nat 108 ; FAILWITH }
                                              { PUSH string "FA1.2 token" ;
                                                DUP 2 ;
                                                COMPARE ;
                                                EQ ;
                                                IF { DROP ;
                                                     CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                                     IF_NONE { PUSH nat 101 ; FAILWITH } {} ;
                                                     PUSH mutez 0 ;
                                                     DIG 2 ;
                                                     CDR ;
                                                     DUP 8 ;
                                                     DUP 6 ;
                                                     PAIR 3 ;
                                                     TRANSFER_TOKENS }
                                                   { PUSH string "FA2 token" ;
                                                     SWAP ;
                                                     COMPARE ;
                                                     EQ ;
                                                     IF { CONTRACT %transfer
                                                            (list (pair (address %from_) (list %tx (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                          IF_NONE { PUSH nat 101 ; FAILWITH } {} ;
                                                          PUSH mutez 0 ;
                                                          NIL (pair address (list (pair address nat nat))) ;
                                                          NIL (pair address nat nat) ;
                                                          DUP 5 ;
                                                          CDR ;
                                                          DIG 5 ;
                                                          CAR ;
                                                          CAR ;
                                                          DUP 11 ;
                                                          PAIR 3 ;
                                                          CONS ;
                                                          DUP 6 ;
                                                          PAIR ;
                                                          CONS ;
                                                          TRANSFER_TOKENS }
                                                        { DROP 2 ; PUSH nat 108 ; FAILWITH } } } } ;
                                        CONS } ;
                                 SWAP ;
                                 DIG 4 ;
                                 DROP 2 ;
                                 PUSH mutez 0 ;
                                 DUP 3 ;
                                 COMPARE ;
                                 GT ;
                                 IF { DUP 3 ;
                                      CAR ;
                                      CDR ;
                                      CAR ;
                                      CAR ;
                                      CONTRACT unit ;
                                      IF_NONE
                                        { SWAP ; DROP ; PUSH nat 102 ; FAILWITH }
                                        { DIG 2 ; UNIT ; TRANSFER_TOKENS } ;
                                      CONS }
                                    { SWAP ; DROP } ;
                                 PAIR } } } } }
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         DIG 2 ;
                         CAR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CAR ;
                         DIG 4 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         UPDATE 1 ;
                         NIL operation ;
                         PAIR }
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         PUSH nat 600 ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { DROP 2 ; PUSH nat 131 ; FAILWITH }
                            { PUSH nat 3600 ;
                              DUP 2 ;
                              COMPARE ;
                              GT ;
                              IF { DROP 2 ; PUSH nat 132 ; FAILWITH }
                                 { DUP 2 ;
                                   DIG 2 ;
                                   CAR ;
                                   DUP ;
                                   CAR ;
                                   DUP ;
                                   CDR ;
                                   DIG 4 ;
                                   UPDATE 1 ;
                                   UPDATE 2 ;
                                   UPDATE 1 ;
                                   UPDATE 1 ;
                                   NIL operation ;
                                   PAIR } } } }
                   { IF_LEFT
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         DIG 2 ;
                         CAR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DIG 4 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 1 }
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         GET ;
                         IF_NONE { PUSH nat 117 ; FAILWITH } {} ;
                         DUP ;
                         GET 3 ;
                         DUP 2 ;
                         GET 5 ;
                         VIEW "getPrice" (pair timestamp nat) ;
                         IF_NONE { PUSH nat 123 ; FAILWITH } { DROP } ;
                         DUP 3 ;
                         DUP 4 ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DIG 6 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         DUP 7 ;
                         GET 3 ;
                         UPDATE 3 ;
                         DUP 7 ;
                         GET 5 ;
                         UPDATE 5 ;
                         DUP 7 ;
                         GET 6 ;
                         UPDATE 7 ;
                         SOME ;
                         DIG 6 ;
                         CAR ;
                         UPDATE ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 2 } ;
                     NIL operation ;
                     PAIR } } }
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 3 ;
                 IF_LEFT
                   { IF_LEFT
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         PUSH nat 1 ;
                         DUP 2 ;
                         COMPARE ;
                         LT ;
                         IF { DROP 2 ; PUSH nat 135 ; FAILWITH }
                            { PUSH nat 10 ;
                              DUP 2 ;
                              COMPARE ;
                              GT ;
                              IF { DROP 2 ; PUSH nat 136 ; FAILWITH }
                                 { DUP 2 ;
                                   DIG 2 ;
                                   CDR ;
                                   DUP ;
                                   CAR ;
                                   DUP ;
                                   CAR ;
                                   DIG 4 ;
                                   UPDATE 2 ;
                                   UPDATE 1 ;
                                   UPDATE 1 ;
                                   UPDATE 2 ;
                                   NIL operation ;
                                   PAIR } } }
                       { DUP ;
                         GET 5 ;
                         PUSH nat 0 ;
                         DUP 2 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP ; UNIT ; LEFT unit }
                            { PUSH nat 1 ;
                              SWAP ;
                              COMPARE ;
                              EQ ;
                              IF { UNIT ; RIGHT unit } { PUSH nat 106 ; FAILWITH } } ;
                         DUP 2 ;
                         CAR ;
                         DUP ;
                         CDR ;
                         GET 3 ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         PAIR ;
                         SWAP ;
                         IF_LEFT { DROP } { DROP ; DUP ; CAR ; SWAP ; CDR ; PAIR } ;
                         NOW ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         UNPAIR ;
                         DUP ;
                         DUP 3 ;
                         COMPARE ;
                         GT ;
                         IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                            { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                         GET ;
                         IF_NONE { PUSH nat 117 ; FAILWITH } {} ;
                         GET 8 ;
                         IF { DROP 4 ; PUSH nat 125 ; FAILWITH }
                            { DUP 4 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              CDR ;
                              AMOUNT ;
                              DUP 2 ;
                              DUP 2 ;
                              COMPARE ;
                              LT ;
                              IF { DROP 6 ; PUSH nat 113 ; FAILWITH }
                                 { COMPARE ;
                                   GT ;
                                   IF { DROP 4 ; PUSH nat 130 ; FAILWITH }
                                      { DUP 4 ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DUP 5 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CDR ;
                                        DUP 6 ;
                                        CAR ;
                                        CAR ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        DUP 5 ;
                                        UNPAIR ;
                                        DUP ;
                                        DUP 3 ;
                                        COMPARE ;
                                        GT ;
                                        IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                           { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                        GET ;
                                        IF_NONE { PUSH nat 0 } {} ;
                                        GET ;
                                        IF_NONE
                                          { DROP ;
                                            DUP 4 ;
                                            CAR ;
                                            CAR ;
                                            CAR ;
                                            CDR ;
                                            PUSH nat 0 ;
                                            DUP 2 ;
                                            CAR ;
                                            ITER { CDR ; DUP 2 ; DUP 2 ; COMPARE ; GT ; IF { SWAP ; DROP } { DROP } } ;
                                            PUSH nat 1 ;
                                            ADD ;
                                            PUSH nat 0 ;
                                            DUP 5 ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PUSH nat 0 ;
                                            PAIR 8 ;
                                            DIG 5 ;
                                            RIGHT
                                              (or (pair (pair timestamp
                                                              (pair (pair nat nat nat)
                                                                    (or (or unit unit) unit)
                                                                    (pair nat nat nat nat)
                                                                    (pair (pair string string) (pair int int) timestamp)))
                                                        (pair (pair string string) (pair int int) timestamp))
                                                  (pair timestamp timestamp)) ;
                                            DIG 4 ;
                                            PAIR 5 ;
                                            DUP 2 ;
                                            DUP 3 ;
                                            CDR ;
                                            DUP 3 ;
                                            SOME ;
                                            DUP 4 ;
                                            CAR ;
                                            UPDATE ;
                                            UPDATE 2 ;
                                            DIG 2 ;
                                            CAR ;
                                            DUP 3 ;
                                            CAR ;
                                            SOME ;
                                            DUP 4 ;
                                            GET 7 ;
                                            UNPAIR ;
                                            DUP ;
                                            DUP 3 ;
                                            COMPARE ;
                                            GT ;
                                            IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                               { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                            UPDATE ;
                                            UPDATE 1 }
                                          { DUP ;
                                            GET 3 ;
                                            IF_LEFT
                                              { DIG 2 ;
                                                DROP ;
                                                IF_LEFT
                                                  { DROP 2 ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    CAR ;
                                                    CAR ;
                                                    CDR ;
                                                    PUSH nat 0 ;
                                                    DUP 2 ;
                                                    CAR ;
                                                    ITER { CDR ; DUP 2 ; DUP 2 ; COMPARE ; GT ; IF { SWAP ; DROP } { DROP } } ;
                                                    PUSH nat 1 ;
                                                    ADD ;
                                                    PUSH nat 0 ;
                                                    DUP 5 ;
                                                    PUSH nat 0 ;
                                                    PUSH nat 0 ;
                                                    PUSH nat 0 ;
                                                    PUSH nat 0 ;
                                                    PUSH nat 0 ;
                                                    PUSH nat 0 ;
                                                    PUSH nat 0 ;
                                                    PUSH nat 0 ;
                                                    PAIR 8 ;
                                                    DIG 5 ;
                                                    RIGHT
                                                      (or (pair (pair timestamp
                                                                      (pair (pair nat nat nat)
                                                                            (or (or unit unit) unit)
                                                                            (pair nat nat nat nat)
                                                                            (pair (pair string string) (pair int int) timestamp)))
                                                                (pair (pair string string) (pair int int) timestamp))
                                                          (pair timestamp timestamp)) ;
                                                    DIG 4 ;
                                                    PAIR 5 ;
                                                    DUP 2 ;
                                                    DUP 3 ;
                                                    CDR ;
                                                    DUP 3 ;
                                                    SOME ;
                                                    DUP 4 ;
                                                    CAR ;
                                                    UPDATE ;
                                                    UPDATE 2 ;
                                                    DIG 2 ;
                                                    CAR ;
                                                    DUP 3 ;
                                                    CAR ;
                                                    SOME ;
                                                    DUP 4 ;
                                                    GET 7 ;
                                                    UNPAIR ;
                                                    DUP ;
                                                    DUP 3 ;
                                                    COMPARE ;
                                                    GT ;
                                                    IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                                       { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                                    UPDATE ;
                                                    UPDATE 1 }
                                                  { DIG 2 ; DROP 2 ; DUP 4 ; CAR ; CAR ; CAR ; CDR } }
                                              { DUP 3 ;
                                                INT ;
                                                ADD ;
                                                DIG 3 ;
                                                COMPARE ;
                                                GE ;
                                                IF { DUP ;
                                                     GET 3 ;
                                                     IF_LEFT
                                                       { SWAP ;
                                                         DIG 2 ;
                                                         DROP 2 ;
                                                         IF_LEFT
                                                           { DROP ; PUSH nat 105 ; FAILWITH }
                                                           { DROP ; PUSH nat 105 ; FAILWITH } }
                                                       { DIG 2 ;
                                                         INT ;
                                                         DUP 2 ;
                                                         ADD ;
                                                         PAIR ;
                                                         RIGHT
                                                           (pair (pair timestamp
                                                                       (pair (pair nat nat nat)
                                                                             (or (or unit unit) unit)
                                                                             (pair nat nat nat nat)
                                                                             (pair (pair string string) (pair int int) timestamp)))
                                                                 (pair (pair string string) (pair int int) timestamp)) ;
                                                         LEFT timestamp ;
                                                         UPDATE 3 } ;
                                                     DUP 4 ;
                                                     CAR ;
                                                     CAR ;
                                                     CAR ;
                                                     CDR ;
                                                     DUP ;
                                                     DUP 2 ;
                                                     CDR ;
                                                     DUP 4 ;
                                                     SOME ;
                                                     DUP 5 ;
                                                     CAR ;
                                                     UPDATE ;
                                                     UPDATE 2 ;
                                                     SWAP ;
                                                     CAR ;
                                                     DUP 3 ;
                                                     CAR ;
                                                     SOME ;
                                                     DUP 4 ;
                                                     GET 7 ;
                                                     UNPAIR ;
                                                     DUP ;
                                                     DUP 3 ;
                                                     COMPARE ;
                                                     GT ;
                                                     IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                                        { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                                     UPDATE ;
                                                     UPDATE 1 }
                                                   { SWAP ; DROP ; DUP 4 ; CAR ; CAR ; CAR ; CDR } } } ;
                                        SWAP ;
                                        DUP ;
                                        GET 3 ;
                                        IF_LEFT
                                          { IF_LEFT { DROP ; PUSH bool False } { DROP ; PUSH bool False } }
                                          { DROP ; PUSH bool True } ;
                                        IF { DUP ;
                                             GET 3 ;
                                             IF_LEFT
                                               { IF_LEFT { DROP ; PUSH bool False } { DROP ; PUSH bool False } }
                                               { DROP ; PUSH bool True } ;
                                             IF { DIG 2 ; DROP }
                                                { DUP 5 ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  CDR ;
                                                  DIG 3 ;
                                                  UNPAIR ;
                                                  DUP ;
                                                  DUP 3 ;
                                                  COMPARE ;
                                                  GT ;
                                                  IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                                     { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                                  GET ;
                                                  IF_NONE { PUSH nat 117 ; FAILWITH } {} ;
                                                  DUP ;
                                                  GET 3 ;
                                                  SWAP ;
                                                  GET 5 ;
                                                  VIEW "getPrice" (pair timestamp nat) ;
                                                  IF_NONE { PUSH nat 124 ; FAILWITH } {} ;
                                                  CAR ;
                                                  DUP 5 ;
                                                  CAR ;
                                                  CAR ;
                                                  CDR ;
                                                  CAR ;
                                                  INT ;
                                                  DUP 6 ;
                                                  CDR ;
                                                  CAR ;
                                                  CAR ;
                                                  CDR ;
                                                  INT ;
                                                  MUL ;
                                                  NOW ;
                                                  SUB ;
                                                  COMPARE ;
                                                  LT ;
                                                  IF {} { PUSH nat 120 ; FAILWITH } } ;
                                             DUP 4 ;
                                             DIG 4 ;
                                             CAR ;
                                             DUP ;
                                             CAR ;
                                             DUP ;
                                             CAR ;
                                             DUP 6 ;
                                             UPDATE 2 ;
                                             UPDATE 1 ;
                                             UPDATE 1 ;
                                             UPDATE 1 ;
                                             DUP 2 ;
                                             CAR ;
                                             PUSH nat 1 ;
                                             DUP 3 ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             CDR ;
                                             ADD ;
                                             DUP 6 ;
                                             GET 5 ;
                                             PUSH nat 0 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DROP ; UNIT ; LEFT unit }
                                                { PUSH nat 1 ;
                                                  SWAP ;
                                                  COMPARE ;
                                                  EQ ;
                                                  IF { UNIT ; RIGHT unit } { PUSH nat 106 ; FAILWITH } } ;
                                             DUP 7 ;
                                             GET 6 ;
                                             PUSH nat 0 ;
                                             DUP 2 ;
                                             COMPARE ;
                                             EQ ;
                                             IF { DROP ; UNIT ; RIGHT unit ; LEFT unit }
                                                { PUSH nat 1 ;
                                                  DUP 2 ;
                                                  COMPARE ;
                                                  EQ ;
                                                  IF { DROP ; UNIT ; LEFT unit ; LEFT unit }
                                                     { PUSH nat 2 ;
                                                       SWAP ;
                                                       COMPARE ;
                                                       EQ ;
                                                       IF { UNIT ; RIGHT (or unit unit) } { PUSH nat 107 ; FAILWITH } } } ;
                                             SENDER ;
                                             DUP 6 ;
                                             CDR ;
                                             CDR ;
                                             DUP 10 ;
                                             CAR ;
                                             DUP ;
                                             CAR ;
                                             CAR ;
                                             DUP 2 ;
                                             CDR ;
                                             DUP 4 ;
                                             DUP 3 ;
                                             GET 3 ;
                                             GET ;
                                             IF_NONE
                                               { DROP 4 ; PUSH nat 110 ; FAILWITH }
                                               { DIG 4 ;
                                                 DUP 3 ;
                                                 GET 3 ;
                                                 GET ;
                                                 IF_NONE
                                                   { DROP 4 ; PUSH nat 110 ; FAILWITH }
                                                   { DUP ;
                                                     GET 8 ;
                                                     DUP 4 ;
                                                     GET 8 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DUP 2 ;
                                                     GET 7 ;
                                                     DUP 5 ;
                                                     GET 7 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DUP 3 ;
                                                     GET 5 ;
                                                     DUP 6 ;
                                                     GET 5 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DUP 4 ;
                                                     GET 3 ;
                                                     DUP 7 ;
                                                     GET 3 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DIG 4 ;
                                                     CAR ;
                                                     DIG 6 ;
                                                     CAR ;
                                                     COMPARE ;
                                                     EQ ;
                                                     AND ;
                                                     AND ;
                                                     AND ;
                                                     AND ;
                                                     DUP 2 ;
                                                     GET 8 ;
                                                     DUP 4 ;
                                                     GET 8 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DUP 3 ;
                                                     GET 7 ;
                                                     DUP 5 ;
                                                     GET 7 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DUP 4 ;
                                                     GET 5 ;
                                                     DUP 6 ;
                                                     GET 5 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DUP 5 ;
                                                     GET 3 ;
                                                     DUP 7 ;
                                                     GET 3 ;
                                                     COMPARE ;
                                                     EQ ;
                                                     DIG 5 ;
                                                     CAR ;
                                                     DIG 6 ;
                                                     CAR ;
                                                     COMPARE ;
                                                     EQ ;
                                                     AND ;
                                                     AND ;
                                                     AND ;
                                                     AND ;
                                                     AND ;
                                                     IF { DUP ;
                                                          CDR ;
                                                          GET 3 ;
                                                          SWAP ;
                                                          CAR ;
                                                          CAR ;
                                                          GET 3 ;
                                                          PAIR ;
                                                          DUP 7 ;
                                                          CDR ;
                                                          CAR ;
                                                          CDR ;
                                                          CDR ;
                                                          DUP 5 ;
                                                          IF_LEFT { DROP ; SWAP } { DROP ; DUP 2 ; CAR ; DIG 2 ; CDR ; PAIR } ;
                                                          UNPAIR ;
                                                          DUP ;
                                                          DUP 3 ;
                                                          COMPARE ;
                                                          GT ;
                                                          IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                                             { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                                          MEM ;
                                                          IF {} { PUSH nat 110 ; FAILWITH } }
                                                        { DROP ; PUSH nat 110 ; FAILWITH } } } ;
                                             PUSH bool False ;
                                             DIG 2 ;
                                             DIG 3 ;
                                             DIG 9 ;
                                             CAR ;
                                             DIG 4 ;
                                             DUP 7 ;
                                             DUP 7 ;
                                             PAIR 7 ;
                                             DUP 4 ;
                                             CDR ;
                                             CAR ;
                                             CDR ;
                                             CAR ;
                                             DUP 2 ;
                                             GET 5 ;
                                             GET ;
                                             IF_NONE
                                               { PUSH bool True }
                                               { PUSH nat 0 ;
                                                 SWAP ;
                                                 ITER { CDR ; SIZE ; ADD } ;
                                                 PUSH nat 10 ;
                                                 SWAP ;
                                                 COMPARE ;
                                                 LE } ;
                                             IF { DUP 5 ;
                                                  GET 5 ;
                                                  DUP 2 ;
                                                  GET 9 ;
                                                  IF_LEFT
                                                    { DROP ;
                                                      DUP 2 ;
                                                      GET 7 ;
                                                      CAR ;
                                                      CDR ;
                                                      DUP 2 ;
                                                      GET 7 ;
                                                      ADD ;
                                                      DUP 3 ;
                                                      GET 11 ;
                                                      IF_LEFT
                                                        { IF_LEFT
                                                            { DROP ;
                                                              DUP 2 ;
                                                              DUP 4 ;
                                                              GET 7 ;
                                                              CAR ;
                                                              CDR ;
                                                              DIG 3 ;
                                                              GET 3 ;
                                                              ADD ;
                                                              UPDATE 3 ;
                                                              SWAP ;
                                                              UPDATE 7 }
                                                            { DROP ;
                                                              DUP 2 ;
                                                              DUP 4 ;
                                                              GET 7 ;
                                                              CAR ;
                                                              CDR ;
                                                              DIG 3 ;
                                                              CAR ;
                                                              ADD ;
                                                              UPDATE 1 ;
                                                              SWAP ;
                                                              UPDATE 7 } }
                                                        { DROP ;
                                                          DUP 2 ;
                                                          DUP 4 ;
                                                          GET 7 ;
                                                          CAR ;
                                                          CDR ;
                                                          DIG 3 ;
                                                          GET 5 ;
                                                          ADD ;
                                                          UPDATE 5 ;
                                                          SWAP ;
                                                          UPDATE 7 } }
                                                    { DROP ;
                                                      DUP 2 ;
                                                      GET 7 ;
                                                      CAR ;
                                                      CDR ;
                                                      DUP 2 ;
                                                      GET 14 ;
                                                      ADD ;
                                                      DUP 3 ;
                                                      GET 11 ;
                                                      IF_LEFT
                                                        { IF_LEFT
                                                            { DROP ;
                                                              DUP 2 ;
                                                              DUP 4 ;
                                                              GET 7 ;
                                                              CAR ;
                                                              CDR ;
                                                              DIG 3 ;
                                                              GET 11 ;
                                                              ADD ;
                                                              UPDATE 11 ;
                                                              SWAP ;
                                                              UPDATE 14 }
                                                            { DROP ;
                                                              DUP 2 ;
                                                              DUP 4 ;
                                                              GET 7 ;
                                                              CAR ;
                                                              CDR ;
                                                              DIG 3 ;
                                                              GET 9 ;
                                                              ADD ;
                                                              UPDATE 9 ;
                                                              SWAP ;
                                                              UPDATE 14 } }
                                                        { DROP ;
                                                          DUP 2 ;
                                                          DUP 4 ;
                                                          GET 7 ;
                                                          CAR ;
                                                          CDR ;
                                                          DIG 3 ;
                                                          GET 13 ;
                                                          ADD ;
                                                          UPDATE 13 ;
                                                          SWAP ;
                                                          UPDATE 14 } } ;
                                                  DUP 7 ;
                                                  CDR ;
                                                  DIG 6 ;
                                                  DIG 2 ;
                                                  UPDATE 5 ;
                                                  SOME ;
                                                  DUP 5 ;
                                                  UPDATE ;
                                                  DUP 5 ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  CAR ;
                                                  DUP 3 ;
                                                  GET 5 ;
                                                  GET ;
                                                  IF_NONE
                                                    { DUP ;
                                                      DUP 5 ;
                                                      GET ;
                                                      IF_NONE
                                                        { DROP ; PUSH nat 142 ; FAILWITH }
                                                        { PUSH nat 1 ; DUP 2 ; GET 8 ; ADD ; UPDATE 8 ; SOME ; DUP 5 ; UPDATE } }
                                                    { DUP 5 ;
                                                      GET ;
                                                      IF_NONE
                                                        { DUP ;
                                                          DUP 5 ;
                                                          GET ;
                                                          IF_NONE
                                                            { DROP ; PUSH nat 142 ; FAILWITH }
                                                            { PUSH nat 1 ; DUP 2 ; GET 8 ; ADD ; UPDATE 8 ; SOME ; DUP 5 ; UPDATE } }
                                                        { DROP } } ;
                                                  DUP 2 ;
                                                  GET 5 ;
                                                  DUP 6 ;
                                                  CDR ;
                                                  CAR ;
                                                  CDR ;
                                                  DIG 5 ;
                                                  UPDATE 1 ;
                                                  UPDATE 2 ;
                                                  UPDATE 1 ;
                                                  UPDATE 2 ;
                                                  NIL operation ;
                                                  DIG 2 ;
                                                  CONS ;
                                                  PAIR }
                                                { DROP 6 ; PUSH nat 112 ; FAILWITH } }
                                           { DROP 5 ; PUSH nat 103 ; FAILWITH } } } } } }
                   { IF_LEFT
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { PUSH nat 117 ; FAILWITH } {} ;
                         DUP 3 ;
                         DUP 4 ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DIG 6 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         PUSH bool True ;
                         UPDATE 8 ;
                         SOME ;
                         DIG 6 ;
                         UPDATE ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 2 }
                       { DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE { PUSH nat 117 ; FAILWITH } {} ;
                         DUP 3 ;
                         DUP 4 ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DIG 6 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         PUSH bool False ;
                         UPDATE 8 ;
                         SOME ;
                         DIG 6 ;
                         UPDATE ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 2 } ;
                     NIL operation ;
                     PAIR } }
               { IF_LEFT
                   { DIG 2 ;
                     DIG 4 ;
                     DROP 2 ;
                     IF_LEFT
                       { DROP ;
                         SENDER ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         SELF_ADDRESS ;
                         PUSH mutez 0 ;
                         PUSH mutez 0 ;
                         PAIR ;
                         DUP 3 ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DUP 4 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DUP 5 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CAR ;
                         EMPTY_MAP string (pair (pair nat string (option address) nat (option string)) nat) ;
                         DUP 2 ;
                         DUP 6 ;
                         GET ;
                         IF_NONE
                           { DIG 6 ; DROP ; SWAP }
                           { DUP 7 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 4 ;
                             PAIR ;
                             DUP 7 ;
                             CDR ;
                             CDR ;
                             DUP 8 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 5 ;
                             PAIR ;
                             DIG 3 ;
                             DUP 4 ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             SWAP ;
                             ITER { SWAP ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    UNPAIR ;
                                    DIG 2 ;
                                    UNPAIR ;
                                    DIG 4 ;
                                    UNPAIR ;
                                    DIG 6 ;
                                    UNPAIR ;
                                    DUP 5 ;
                                    CDR ;
                                    DUP ;
                                    DUP 3 ;
                                    GET ;
                                    IF_NONE
                                      { DROP 3 ; PAIR ; DUG 2 ; PAIR ; DIG 3 ; DIG 3 }
                                      { DUP ;
                                        GET 3 ;
                                        IF_LEFT
                                          { IF_LEFT
                                              { CAR ; CDR ; SOME }
                                              { DROP ;
                                                NONE (pair (pair nat nat nat)
                                                           (or (or unit unit) unit)
                                                           (pair nat nat nat nat)
                                                           (pair (pair string string) (pair int int) timestamp)) } }
                                          { DROP ;
                                            NONE (pair (pair nat nat nat)
                                                       (or (or unit unit) unit)
                                                       (pair nat nat nat nat)
                                                       (pair (pair string string) (pair int int) timestamp)) } ;
                                        IF_NONE
                                          { DROP 4 ; PAIR ; DUG 2 ; PAIR ; DIG 3 ; DIG 3 }
                                          { DUP 7 ;
                                            DIG 6 ;
                                            PAIR ;
                                            DUP 9 ;
                                            DUP 4 ;
                                            GET 5 ;
                                            PAIR ;
                                            DIG 11 ;
                                            DIG 3 ;
                                            PAIR ;
                                            PAIR ;
                                            PAIR ;
                                            DIG 4 ;
                                            ITER { SWAP ;
                                                   UNPAIR ;
                                                   UNPAIR ;
                                                   UNPAIR ;
                                                   DIG 2 ;
                                                   UNPAIR ;
                                                   DIG 4 ;
                                                   UNPAIR ;
                                                   DIG 6 ;
                                                   UNPAIR ;
                                                   PUSH nat 0 ;
                                                   DUP 6 ;
                                                   GET 7 ;
                                                   COMPARE ;
                                                   EQ ;
                                                   IF { PUSH bool False }
                                                      { PUSH nat 0 ;
                                                        DUP 6 ;
                                                        GET 14 ;
                                                        COMPARE ;
                                                        EQ ;
                                                        IF { PUSH bool False }
                                                           { DUP ;
                                                             CDR ;
                                                             DUP 8 ;
                                                             GET 3 ;
                                                             DUP 3 ;
                                                             CAR ;
                                                             IF_LEFT
                                                               { DROP ;
                                                                 SWAP ;
                                                                 IF_LEFT
                                                                   { IF_LEFT
                                                                       { DROP ;
                                                                         IF_LEFT
                                                                           { IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                                                                           { DROP ; PUSH bool True } }
                                                                       { DROP ;
                                                                         IF_LEFT
                                                                           { IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool True } }
                                                                           { DROP ; PUSH bool True } } }
                                                                   { DROP ;
                                                                     IF_LEFT
                                                                       { IF_LEFT { DROP ; PUSH bool False } { DROP ; PUSH bool False } }
                                                                       { DROP ; PUSH bool True } } }
                                                               { DROP ;
                                                                 SWAP ;
                                                                 IF_LEFT
                                                                   { IF_LEFT
                                                                       { DROP ;
                                                                         IF_LEFT
                                                                           { IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool True } }
                                                                           { DROP ; PUSH bool False } }
                                                                       { DROP ;
                                                                         IF_LEFT
                                                                           { IF_LEFT { DROP ; PUSH bool False } { DROP ; PUSH bool True } }
                                                                           { DROP ; PUSH bool False } } }
                                                                   { DROP ;
                                                                     IF_LEFT
                                                                       { IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool True } }
                                                                       { DROP ; PUSH bool True } } } } } ;
                                                   IF { DUP 7 ;
                                                        GET 6 ;
                                                        CAR ;
                                                        DUP 7 ;
                                                        DUP 2 ;
                                                        CAR ;
                                                        GET ;
                                                        IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                        DUP 8 ;
                                                        DIG 2 ;
                                                        CDR ;
                                                        GET ;
                                                        IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                                        DIG 2 ;
                                                        CAR ;
                                                        IF_LEFT
                                                          { DROP ;
                                                            DUP 8 ;
                                                            GET 5 ;
                                                            DUP ;
                                                            GET 5 ;
                                                            INT ;
                                                            SWAP ;
                                                            GET 3 ;
                                                            INT ;
                                                            PUSH int 1 ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIG 4 ;
                                                            INT ;
                                                            PUSH int 1 ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DUP 2 ;
                                                            CAR ;
                                                            DUP 2 ;
                                                            CDR ;
                                                            MUL ;
                                                            DIG 2 ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            MUL ;
                                                            PAIR ;
                                                            PUSH int 1 ;
                                                            DIG 3 ;
                                                            PAIR ;
                                                            DUP ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CDR ;
                                                            MUL ;
                                                            SWAP ;
                                                            CAR ;
                                                            DIG 2 ;
                                                            CAR ;
                                                            MUL ;
                                                            PAIR ;
                                                            DUP 9 ;
                                                            GET 6 ;
                                                            GET 3 ;
                                                            DUP ;
                                                            CAR ;
                                                            DUP 3 ;
                                                            CDR ;
                                                            MUL ;
                                                            SWAP ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            MUL ;
                                                            PAIR ;
                                                            DUP ;
                                                            CDR ;
                                                            DUP 4 ;
                                                            CDR ;
                                                            MUL ;
                                                            DUP 4 ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            MUL ;
                                                            DIG 2 ;
                                                            CDR ;
                                                            DIG 4 ;
                                                            CAR ;
                                                            MUL ;
                                                            SUB ;
                                                            PAIR ;
                                                            PUSH int 0 ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            COMPARE ;
                                                            LT ;
                                                            IF { PUSH int -1 ; DUP 3 ; CDR ; MUL ; PUSH int -1 ; DIG 3 ; CAR ; MUL ; PAIR }
                                                               { SWAP } ;
                                                            DUP ;
                                                            CDR ;
                                                            PUSH nat 1 ;
                                                            PUSH nat 0 ;
                                                            PUSH nat 10 ;
                                                            PAIR ;
                                                            PAIR ;
                                                            LEFT nat ;
                                                            LOOP_LEFT
                                                              { UNPAIR ;
                                                                UNPAIR ;
                                                                PUSH nat 0 ;
                                                                DUP 3 ;
                                                                COMPARE ;
                                                                EQ ;
                                                                IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                                   { PUSH nat 1 ;
                                                                     PUSH nat 1 ;
                                                                     DUP 4 ;
                                                                     AND ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                                     PUSH nat 1 ;
                                                                     DIG 3 ;
                                                                     LSR ;
                                                                     DUP 3 ;
                                                                     DIG 3 ;
                                                                     MUL ;
                                                                     PAIR ;
                                                                     PAIR ;
                                                                     LEFT nat } } ;
                                                            DIG 2 ;
                                                            CAR ;
                                                            MUL ;
                                                            EDIV ;
                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                            CAR ;
                                                            ISNAT ;
                                                            IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                            DIG 2 ;
                                                            PAIR ;
                                                            PUSH nat 0 ;
                                                            DUP 2 ;
                                                            CDR ;
                                                            COMPARE ;
                                                            GT ;
                                                            IF { DIG 8 ; SWAP ; PAIR ; DUP 20 ; SWAP ; EXEC } { DROP ; DIG 7 } ;
                                                            PUSH int 1 ;
                                                            PUSH int 0 ;
                                                            PAIR ;
                                                            DUP ;
                                                            CAR ;
                                                            DUP 4 ;
                                                            CDR ;
                                                            MUL ;
                                                            SWAP ;
                                                            CDR ;
                                                            DUP 4 ;
                                                            CAR ;
                                                            MUL ;
                                                            COMPARE ;
                                                            LE ;
                                                            NOT ;
                                                            IF { PUSH int 0 ;
                                                                 DUP 3 ;
                                                                 CAR ;
                                                                 COMPARE ;
                                                                 LT ;
                                                                 IF { PUSH int -1 ; DUP 3 ; CDR ; MUL ; PUSH int -1 ; DIG 3 ; CAR ; MUL ; PAIR }
                                                                    { SWAP } ;
                                                                 DUP ;
                                                                 CDR ;
                                                                 PUSH nat 1 ;
                                                                 PUSH nat 0 ;
                                                                 PUSH nat 10 ;
                                                                 PAIR ;
                                                                 PAIR ;
                                                                 LEFT nat ;
                                                                 LOOP_LEFT
                                                                   { UNPAIR ;
                                                                     UNPAIR ;
                                                                     PUSH nat 0 ;
                                                                     DUP 3 ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                                        { PUSH nat 1 ;
                                                                          PUSH nat 1 ;
                                                                          DUP 4 ;
                                                                          AND ;
                                                                          COMPARE ;
                                                                          EQ ;
                                                                          IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                                          PUSH nat 1 ;
                                                                          DIG 3 ;
                                                                          LSR ;
                                                                          DUP 3 ;
                                                                          DIG 3 ;
                                                                          MUL ;
                                                                          PAIR ;
                                                                          PAIR ;
                                                                          LEFT nat } } ;
                                                                 DIG 2 ;
                                                                 CAR ;
                                                                 MUL ;
                                                                 EDIV ;
                                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                 CAR ;
                                                                 ISNAT ;
                                                                 IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                                 DIG 2 ;
                                                                 PAIR ;
                                                                 PAIR ;
                                                                 DUP 18 ;
                                                                 SWAP ;
                                                                 EXEC }
                                                               { SWAP ; DIG 2 ; DROP 2 } }
                                                          { DROP ;
                                                            DUP 8 ;
                                                            GET 5 ;
                                                            DUP ;
                                                            CAR ;
                                                            INT ;
                                                            SWAP ;
                                                            GET 6 ;
                                                            INT ;
                                                            PUSH int 1 ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DIG 4 ;
                                                            INT ;
                                                            PUSH int 1 ;
                                                            SWAP ;
                                                            PAIR ;
                                                            DUP 2 ;
                                                            CAR ;
                                                            DUP 2 ;
                                                            CDR ;
                                                            MUL ;
                                                            DIG 2 ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            MUL ;
                                                            PAIR ;
                                                            PUSH int 1 ;
                                                            DIG 3 ;
                                                            PAIR ;
                                                            DUP ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CDR ;
                                                            MUL ;
                                                            SWAP ;
                                                            CAR ;
                                                            DIG 2 ;
                                                            CAR ;
                                                            MUL ;
                                                            PAIR ;
                                                            DUP 9 ;
                                                            GET 6 ;
                                                            GET 3 ;
                                                            DUP ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CDR ;
                                                            MUL ;
                                                            SWAP ;
                                                            CAR ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            MUL ;
                                                            PAIR ;
                                                            DUP ;
                                                            CDR ;
                                                            DUP 4 ;
                                                            CDR ;
                                                            MUL ;
                                                            DUP 4 ;
                                                            CDR ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            MUL ;
                                                            DIG 2 ;
                                                            CDR ;
                                                            DIG 4 ;
                                                            CAR ;
                                                            MUL ;
                                                            SUB ;
                                                            PAIR ;
                                                            PUSH int 0 ;
                                                            DUP 3 ;
                                                            CAR ;
                                                            COMPARE ;
                                                            LT ;
                                                            IF { PUSH int -1 ; DUP 3 ; CDR ; MUL ; PUSH int -1 ; DIG 3 ; CAR ; MUL ; PAIR }
                                                               { SWAP } ;
                                                            DUP ;
                                                            CDR ;
                                                            PUSH nat 1 ;
                                                            PUSH nat 0 ;
                                                            PUSH nat 10 ;
                                                            PAIR ;
                                                            PAIR ;
                                                            LEFT nat ;
                                                            LOOP_LEFT
                                                              { UNPAIR ;
                                                                UNPAIR ;
                                                                PUSH nat 0 ;
                                                                DUP 3 ;
                                                                COMPARE ;
                                                                EQ ;
                                                                IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                                   { PUSH nat 1 ;
                                                                     PUSH nat 1 ;
                                                                     DUP 4 ;
                                                                     AND ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                                     PUSH nat 1 ;
                                                                     DIG 3 ;
                                                                     LSR ;
                                                                     DUP 3 ;
                                                                     DIG 3 ;
                                                                     MUL ;
                                                                     PAIR ;
                                                                     PAIR ;
                                                                     LEFT nat } } ;
                                                            DIG 2 ;
                                                            CAR ;
                                                            MUL ;
                                                            EDIV ;
                                                            IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                            CAR ;
                                                            ISNAT ;
                                                            IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                            DIG 3 ;
                                                            PAIR ;
                                                            PUSH nat 0 ;
                                                            DUP 2 ;
                                                            CDR ;
                                                            COMPARE ;
                                                            GT ;
                                                            IF { DIG 8 ; SWAP ; PAIR ; DUP 20 ; SWAP ; EXEC } { DROP ; DIG 7 } ;
                                                            PUSH int 1 ;
                                                            PUSH int 0 ;
                                                            PAIR ;
                                                            DUP ;
                                                            CAR ;
                                                            DUP 4 ;
                                                            CDR ;
                                                            MUL ;
                                                            SWAP ;
                                                            CDR ;
                                                            DUP 4 ;
                                                            CAR ;
                                                            MUL ;
                                                            COMPARE ;
                                                            LE ;
                                                            NOT ;
                                                            IF { PUSH int 0 ;
                                                                 DUP 3 ;
                                                                 CAR ;
                                                                 COMPARE ;
                                                                 LT ;
                                                                 IF { PUSH int -1 ; DUP 3 ; CDR ; MUL ; PUSH int -1 ; DIG 3 ; CAR ; MUL ; PAIR }
                                                                    { SWAP } ;
                                                                 DUP ;
                                                                 CDR ;
                                                                 PUSH nat 1 ;
                                                                 PUSH nat 0 ;
                                                                 PUSH nat 10 ;
                                                                 PAIR ;
                                                                 PAIR ;
                                                                 LEFT nat ;
                                                                 LOOP_LEFT
                                                                   { UNPAIR ;
                                                                     UNPAIR ;
                                                                     PUSH nat 0 ;
                                                                     DUP 3 ;
                                                                     COMPARE ;
                                                                     EQ ;
                                                                     IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                                                        { PUSH nat 1 ;
                                                                          PUSH nat 1 ;
                                                                          DUP 4 ;
                                                                          AND ;
                                                                          COMPARE ;
                                                                          EQ ;
                                                                          IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                                                          PUSH nat 1 ;
                                                                          DIG 3 ;
                                                                          LSR ;
                                                                          DUP 3 ;
                                                                          DIG 3 ;
                                                                          MUL ;
                                                                          PAIR ;
                                                                          PAIR ;
                                                                          LEFT nat } } ;
                                                                 DIG 2 ;
                                                                 CAR ;
                                                                 MUL ;
                                                                 EDIV ;
                                                                 IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                                                 CAR ;
                                                                 ISNAT ;
                                                                 IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                                                 DIG 2 ;
                                                                 PAIR ;
                                                                 PAIR ;
                                                                 DUP 18 ;
                                                                 SWAP ;
                                                                 EXEC }
                                                               { SWAP ; DIG 2 ; DROP 2 } } ;
                                                        DUP 3 ;
                                                        DUP 3 ;
                                                        CDR ;
                                                        CAR ;
                                                        ADD ;
                                                        DUP 3 ;
                                                        DIG 3 ;
                                                        CDR ;
                                                        DIG 2 ;
                                                        UPDATE 1 ;
                                                        UPDATE 2 ;
                                                        SWAP }
                                                      { DUP 7 ;
                                                        GET 6 ;
                                                        CAR ;
                                                        SWAP ;
                                                        CAR ;
                                                        IF_LEFT
                                                          { DROP ;
                                                            DUP 6 ;
                                                            SWAP ;
                                                            CAR ;
                                                            GET ;
                                                            IF_NONE { PUSH nat 111 ; FAILWITH } {} }
                                                          { DROP ;
                                                            DUP 6 ;
                                                            SWAP ;
                                                            CDR ;
                                                            GET ;
                                                            IF_NONE { PUSH nat 111 ; FAILWITH } {} } ;
                                                        DUP 4 ;
                                                        DUP 4 ;
                                                        CDR ;
                                                        CDR ;
                                                        ADD ;
                                                        DUP 4 ;
                                                        DIG 4 ;
                                                        CDR ;
                                                        DIG 2 ;
                                                        UPDATE 2 ;
                                                        UPDATE 2 ;
                                                        DIG 7 ;
                                                        DIG 3 ;
                                                        DIG 3 ;
                                                        PAIR ;
                                                        PAIR ;
                                                        DUP 18 ;
                                                        SWAP ;
                                                        EXEC } ;
                                                   DUG 2 ;
                                                   PAIR ;
                                                   DIG 3 ;
                                                   DIG 3 ;
                                                   PAIR ;
                                                   DIG 2 ;
                                                   DIG 3 ;
                                                   PAIR ;
                                                   PAIR ;
                                                   PAIR } ;
                                            UNPAIR ;
                                            CAR ;
                                            CDR ;
                                            SWAP ;
                                            CAR ;
                                            DUP 3 ;
                                            CAR ;
                                            DUP 5 ;
                                            DUP 2 ;
                                            GET ;
                                            IF_NONE
                                              { DIG 4 ; DROP 2 ; PUSH nat 141 ; FAILWITH }
                                              { PUSH nat 1 ;
                                                DUP 2 ;
                                                GET 8 ;
                                                SUB ;
                                                ABS ;
                                                DIG 6 ;
                                                DUG 2 ;
                                                UPDATE 8 ;
                                                SOME ;
                                                DIG 2 ;
                                                UPDATE } ;
                                            DUP ;
                                            DUP 5 ;
                                            CAR ;
                                            GET ;
                                            IF_NONE
                                              { PUSH nat 141 ; FAILWITH }
                                              { PUSH nat 0 ; SWAP ; GET 8 ; COMPARE ; LE } ;
                                            DIG 6 ;
                                            DIG 3 ;
                                            PAIR ;
                                            DIG 7 ;
                                            DIG 2 ;
                                            IF { DIG 2 ;
                                                 DROP ;
                                                 DUP 6 ;
                                                 DIG 6 ;
                                                 CDR ;
                                                 DIG 5 ;
                                                 CAR ;
                                                 NONE (pair nat
                                                            (or (or (pair (pair timestamp
                                                                                (pair (pair nat nat nat)
                                                                                      (or (or unit unit) unit)
                                                                                      (pair nat nat nat nat)
                                                                                      (pair (pair string string) (pair int int) timestamp)))
                                                                          (pair (pair string string) (pair int int) timestamp))
                                                                    (pair timestamp timestamp))
                                                                timestamp)
                                                            (pair nat nat nat nat nat nat nat nat)
                                                            (pair string string)
                                                            nat) ;
                                                 SWAP ;
                                                 UPDATE ;
                                                 UPDATE 2 }
                                               { DIG 4 ; DROP ; DIG 5 ; DIG 3 ; UPDATE 2 } ;
                                            PAIR ;
                                            DIG 2 ;
                                            DIG 4 ;
                                            DIG 4 ;
                                            NONE (map (pair (or unit unit) (or (or unit unit) unit)) nat) ;
                                            SWAP ;
                                            UPDATE } } ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR } ;
                             DIG 5 ;
                             DROP ;
                             UNPAIR ;
                             UNPAIR ;
                             UNPAIR ;
                             DIG 2 ;
                             CAR ;
                             DIG 3 ;
                             CAR ;
                             DIG 3 ;
                             DIG 2 ;
                             PAIR ;
                             DIG 3 ;
                             DIG 3 ;
                             SOME ;
                             DUP 6 ;
                             UPDATE } ;
                         DUG 2 ;
                         UNPAIR ;
                         NIL operation ;
                         DIG 2 ;
                         ITER { CDR ;
                                DUP ;
                                CAR ;
                                GET 5 ;
                                IF_NONE
                                  { DROP ; PUSH nat 109 ; FAILWITH }
                                  { DUP 2 ;
                                    CAR ;
                                    GET 8 ;
                                    IF_NONE
                                      { DROP 2 ; PUSH nat 108 ; FAILWITH }
                                      { PUSH string "FA1.2 token" ;
                                        DUP 2 ;
                                        COMPARE ;
                                        EQ ;
                                        IF { DROP ;
                                             CONTRACT %transfer (pair (address %from) (address %to) (nat %value)) ;
                                             IF_NONE { PUSH nat 101 ; FAILWITH } {} ;
                                             PUSH mutez 0 ;
                                             DIG 2 ;
                                             CDR ;
                                             DUP 9 ;
                                             DUP 9 ;
                                             PAIR 3 ;
                                             TRANSFER_TOKENS }
                                           { PUSH string "FA2 token" ;
                                             SWAP ;
                                             COMPARE ;
                                             EQ ;
                                             IF { CONTRACT %transfer
                                                    (list (pair (address %from_) (list %tx (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                                  IF_NONE { PUSH nat 101 ; FAILWITH } {} ;
                                                  PUSH mutez 0 ;
                                                  NIL (pair address (list (pair address nat nat))) ;
                                                  NIL (pair address nat nat) ;
                                                  DUP 5 ;
                                                  CDR ;
                                                  DIG 5 ;
                                                  CAR ;
                                                  CAR ;
                                                  DUP 12 ;
                                                  PAIR 3 ;
                                                  CONS ;
                                                  DUP 9 ;
                                                  PAIR ;
                                                  CONS ;
                                                  TRANSFER_TOKENS }
                                                { DROP 2 ; PUSH nat 108 ; FAILWITH } } } } ;
                                CONS } ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 2 ;
                         PUSH mutez 0 ;
                         DUP 4 ;
                         CDR ;
                         CDR ;
                         COMPARE ;
                         GT ;
                         IF { DUP 3 ;
                              CAR ;
                              CDR ;
                              CONTRACT unit ;
                              IF_NONE
                                { PUSH nat 102 ; FAILWITH }
                                { DUP 4 ; CDR ; CDR ; UNIT ; TRANSFER_TOKENS } ;
                              CONS }
                            {} ;
                         PUSH mutez 0 ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         COMPARE ;
                         GT ;
                         IF { DUP 3 ;
                              CAR ;
                              CAR ;
                              CONTRACT unit ;
                              IF_NONE
                                { DIG 2 ; DROP ; PUSH nat 102 ; FAILWITH }
                                { DIG 3 ; CDR ; CAR ; UNIT ; TRANSFER_TOKENS } ;
                              CONS }
                            { SWAP ; DROP } ;
                         DUP 3 ;
                         DIG 3 ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DIG 5 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         SWAP }
                       { DIG 2 ;
                         DROP ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         DUP 3 ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DUP ;
                         CDR ;
                         DIG 5 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         DIG 5 ;
                         NONE bytes ;
                         SWAP ;
                         UPDATE ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         NIL operation } ;
                     PAIR }
                   { DIG 3 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DIG 3 ;
                         DROP 2 ;
                         DUP 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF {} { PUSH nat 114 ; FAILWITH } ;
                         PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP ;
                         GET 8 ;
                         IF {} { PUSH nat 137 ; FAILWITH } ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CAR ;
                         DUP ;
                         CDR ;
                         GET 3 ;
                         SWAP ;
                         CAR ;
                         CAR ;
                         GET 3 ;
                         SWAP ;
                         DUP 3 ;
                         DUP 3 ;
                         DUP 3 ;
                         COMPARE ;
                         GT ;
                         IF { DIG 2 ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT }
                            { SWAP ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT } ;
                         GET ;
                         IF_NONE
                           { DROP 2 ; PUSH nat 117 ; FAILWITH }
                           { DROP ;
                             DUP 3 ;
                             CDR ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             DUP ;
                             CDR ;
                             GET 3 ;
                             SWAP ;
                             CAR ;
                             CAR ;
                             GET 3 ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP 2 ;
                             CDR ;
                             DIG 4 ;
                             DUP 3 ;
                             DUP 3 ;
                             COMPARE ;
                             GT ;
                             IF { DIG 2 ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT }
                                { SWAP ; PUSH string "/" ; CONCAT ; DIG 2 ; CONCAT } ;
                             NONE (pair (pair string string) address string nat bool) ;
                             SWAP ;
                             UPDATE ;
                             DUP 3 ;
                             DUP 3 ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             DUP 4 ;
                             DIG 3 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             PUSH bool False ;
                             DUP 4 ;
                             ITER { CDR ;
                                    CAR ;
                                    DUP 6 ;
                                    DUP 2 ;
                                    CDR ;
                                    GET ;
                                    IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                    DUP 7 ;
                                    DIG 2 ;
                                    CAR ;
                                    GET ;
                                    IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                    DIG 2 ;
                                    DUP 2 ;
                                    GET 8 ;
                                    DUP 6 ;
                                    GET 8 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 3 ;
                                    GET 7 ;
                                    DUP 7 ;
                                    GET 7 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 4 ;
                                    GET 5 ;
                                    DUP 8 ;
                                    GET 5 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 5 ;
                                    GET 3 ;
                                    DUP 9 ;
                                    GET 3 ;
                                    COMPARE ;
                                    EQ ;
                                    DIG 5 ;
                                    CAR ;
                                    DUP 9 ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    DUP 3 ;
                                    GET 8 ;
                                    DUP 6 ;
                                    GET 8 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 4 ;
                                    GET 7 ;
                                    DUP 7 ;
                                    GET 7 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 5 ;
                                    GET 5 ;
                                    DUP 8 ;
                                    GET 5 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 6 ;
                                    GET 3 ;
                                    DUP 9 ;
                                    GET 3 ;
                                    COMPARE ;
                                    EQ ;
                                    DIG 6 ;
                                    CAR ;
                                    DUP 9 ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    OR ;
                                    OR } ;
                             IF { SWAP ; DROP ; DIG 2 }
                                { DUP 4 ;
                                  DUP 3 ;
                                  GET 3 ;
                                  GET ;
                                  IF_NONE
                                    { SWAP ; DROP ; DIG 2 }
                                    { DUP 3 ;
                                      GET 8 ;
                                      DUP 2 ;
                                      GET 8 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 4 ;
                                      GET 7 ;
                                      DUP 3 ;
                                      GET 7 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 5 ;
                                      GET 5 ;
                                      DUP 4 ;
                                      GET 5 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 6 ;
                                      GET 3 ;
                                      DUP 5 ;
                                      GET 3 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 7 ;
                                      CAR ;
                                      DIG 5 ;
                                      CAR ;
                                      COMPARE ;
                                      EQ ;
                                      AND ;
                                      AND ;
                                      AND ;
                                      AND ;
                                      IF { DIG 3 ;
                                           DIG 2 ;
                                           GET 3 ;
                                           NONE (pair nat string (option address) nat (option string)) ;
                                           SWAP ;
                                           UPDATE }
                                         { SWAP ; DIG 3 ; DROP 2 ; PUSH nat 115 ; FAILWITH } } } ;
                             PUSH bool False ;
                             DUP 4 ;
                             ITER { CDR ;
                                    CAR ;
                                    DUP 3 ;
                                    DUP 2 ;
                                    CDR ;
                                    GET ;
                                    IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                    DUP 4 ;
                                    DIG 2 ;
                                    CAR ;
                                    GET ;
                                    IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                                    DIG 2 ;
                                    DUP 2 ;
                                    GET 8 ;
                                    DUP 6 ;
                                    GET 8 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 3 ;
                                    GET 7 ;
                                    DUP 7 ;
                                    GET 7 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 4 ;
                                    GET 5 ;
                                    DUP 8 ;
                                    GET 5 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 5 ;
                                    GET 3 ;
                                    DUP 9 ;
                                    GET 3 ;
                                    COMPARE ;
                                    EQ ;
                                    DIG 5 ;
                                    CAR ;
                                    DUP 9 ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    DUP 3 ;
                                    GET 8 ;
                                    DUP 6 ;
                                    GET 8 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 4 ;
                                    GET 7 ;
                                    DUP 7 ;
                                    GET 7 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 5 ;
                                    GET 5 ;
                                    DUP 8 ;
                                    GET 5 ;
                                    COMPARE ;
                                    EQ ;
                                    DUP 6 ;
                                    GET 3 ;
                                    DUP 9 ;
                                    GET 3 ;
                                    COMPARE ;
                                    EQ ;
                                    DIG 6 ;
                                    CAR ;
                                    DUP 9 ;
                                    CAR ;
                                    COMPARE ;
                                    EQ ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    AND ;
                                    OR ;
                                    OR } ;
                             IF { SWAP ; DROP }
                                { DUP ;
                                  DUP 3 ;
                                  GET 3 ;
                                  GET ;
                                  IF_NONE
                                    { SWAP ; DROP }
                                    { DUP 3 ;
                                      GET 8 ;
                                      DUP 2 ;
                                      GET 8 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 4 ;
                                      GET 7 ;
                                      DUP 3 ;
                                      GET 7 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 5 ;
                                      GET 5 ;
                                      DUP 4 ;
                                      GET 5 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 6 ;
                                      GET 3 ;
                                      DUP 5 ;
                                      GET 3 ;
                                      COMPARE ;
                                      EQ ;
                                      DUP 7 ;
                                      CAR ;
                                      DIG 5 ;
                                      CAR ;
                                      COMPARE ;
                                      EQ ;
                                      AND ;
                                      AND ;
                                      AND ;
                                      AND ;
                                      IF { SWAP ;
                                           GET 3 ;
                                           NONE (pair nat string (option address) nat (option string)) ;
                                           SWAP ;
                                           UPDATE }
                                         { DROP 2 ; PUSH nat 115 ; FAILWITH } } } ;
                             SWAP ;
                             PAIR } ;
                         UNPAIR ;
                         DUP 3 ;
                         DIG 3 ;
                         CDR ;
                         DUP ;
                         CAR ;
                         DUP ;
                         CDR ;
                         DIG 4 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         UPDATE 1 ;
                         UPDATE 2 ;
                         DUP ;
                         CDR ;
                         DIG 2 ;
                         UPDATE 2 ;
                         UPDATE 2 ;
                         NIL operation ;
                         PAIR }
                       { PUSH mutez 1 ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF {} { PUSH nat 118 ; FAILWITH } ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         GET ;
                         IF_NONE
                           { DROP 4 ; PUSH nat 117 ; FAILWITH }
                           { DUP 3 ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             DUP 2 ;
                             DUP 2 ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             DUG 2 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             DUP 3 ;
                             GET 8 ;
                             DUP 4 ;
                             GET 7 ;
                             DUP 5 ;
                             GET 5 ;
                             DIG 5 ;
                             GET 3 ;
                             DIG 4 ;
                             PUSH nat 1 ;
                             DIG 6 ;
                             PAIR ;
                             PAIR ;
                             PAIR 5 ;
                             DUP ;
                             GET 8 ;
                             DUP 2 ;
                             GET 7 ;
                             DUP 3 ;
                             GET 5 ;
                             DUP 4 ;
                             GET 3 ;
                             DUP 5 ;
                             CAR ;
                             DUP ;
                             CDR ;
                             GET 3 ;
                             SWAP ;
                             CAR ;
                             CAR ;
                             GET 3 ;
                             PAIR ;
                             PAIR 5 ;
                             DUP ;
                             GET 3 ;
                             SWAP ;
                             GET 5 ;
                             VIEW "getPrice" (pair timestamp nat) ;
                             IF_NONE { PUSH nat 122 ; FAILWITH } {} ;
                             UNPAIR ;
                             DUP 5 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DUP 5 ;
                             GET ;
                             IF_NONE
                               {}
                               { DUP 2 ;
                                 SWAP ;
                                 GET 4 ;
                                 COMPARE ;
                                 GE ;
                                 IF { PUSH nat 121 ; FAILWITH } {} } ;
                             DUP 5 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             INT ;
                             DUP 6 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             INT ;
                             DUP 3 ;
                             DUG 2 ;
                             MUL ;
                             NOW ;
                             SUB ;
                             COMPARE ;
                             LT ;
                             IF {} { PUSH nat 120 ; FAILWITH } ;
                             DUP 3 ;
                             CAR ;
                             DIG 3 ;
                             GET 7 ;
                             DUP ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             GET 7 ;
                             COMPARE ;
                             GT ;
                             IF { DUP 2 ;
                                  CAR ;
                                  CAR ;
                                  GET 7 ;
                                  SUB ;
                                  PUSH int 10 ;
                                  PAIR ;
                                  DUP 7 ;
                                  SWAP ;
                                  EXEC ;
                                  DIG 3 ;
                                  MUL ;
                                  ISNAT ;
                                  IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                  DUP 2 ;
                                  CAR ;
                                  CAR ;
                                  GET 7 ;
                                  INT ;
                                  PUSH int 10 ;
                                  PAIR ;
                                  DUP 7 ;
                                  SWAP ;
                                  EXEC ;
                                  SWAP }
                                { INT ; PUSH int 10 ; PAIR ; DUP 7 ; SWAP ; EXEC ; DIG 3 } ;
                             INT ;
                             PUSH int 1 ;
                             SWAP ;
                             PAIR ;
                             PUSH int 1 ;
                             DIG 2 ;
                             PAIR ;
                             DUP ;
                             CAR ;
                             DUP 3 ;
                             CDR ;
                             MUL ;
                             SWAP ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             MUL ;
                             PAIR ;
                             DIG 2 ;
                             SWAP ;
                             DUP 3 ;
                             CDR ;
                             GET 3 ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             GET 3 ;
                             PAIR ;
                             PAIR 3 ;
                             DUP 3 ;
                             CDR ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             DUP 2 ;
                             DUP 2 ;
                             CAR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             DUG 2 ;
                             CDR ;
                             GET ;
                             IF_NONE { PUSH nat 111 ; FAILWITH } {} ;
                             SWAP ;
                             GET 7 ;
                             SWAP ;
                             GET 7 ;
                             SUB ;
                             DUP ;
                             ABS ;
                             INT ;
                             PUSH int 10 ;
                             PAIR ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             PUSH int 0 ;
                             DUP 3 ;
                             COMPARE ;
                             EQ ;
                             IF { DROP 2 ; PUSH int 1 ; PUSH int 1 }
                                { PUSH int 0 ;
                                  DIG 2 ;
                                  COMPARE ;
                                  LT ;
                                  IF { PUSH int 1 ;
                                       SWAP ;
                                       PAIR ;
                                       PUSH int 1 ;
                                       PUSH int 1 ;
                                       PAIR ;
                                       DUP 2 ;
                                       CAR ;
                                       DUP 2 ;
                                       CDR ;
                                       MUL ;
                                       DIG 2 ;
                                       CDR ;
                                       DIG 2 ;
                                       CAR ;
                                       MUL }
                                     { PUSH int 1 ; SWAP } } ;
                             PAIR ;
                             DUP 2 ;
                             GET 3 ;
                             DUP 2 ;
                             CDR ;
                             DUP 2 ;
                             CDR ;
                             MUL ;
                             DIG 2 ;
                             CAR ;
                             DIG 2 ;
                             CAR ;
                             MUL ;
                             PAIR ;
                             UPDATE 3 ;
                             DUP 3 ;
                             CDR ;
                             CAR ;
                             CAR ;
                             CAR ;
                             DUP 4 ;
                             DIG 4 ;
                             CDR ;
                             DUP ;
                             CAR ;
                             DUP ;
                             CAR ;
                             DUP 5 ;
                             DUP 8 ;
                             GET ;
                             IF_NONE
                               { DIG 4 ; DUP 6 ; DIG 7 ; SWAP ; SOME ; SWAP ; UPDATE }
                               { GET 4 ;
                                 DUP 7 ;
                                 GET 4 ;
                                 COMPARE ;
                                 GT ;
                                 IF { DIG 4 ; DUP 6 ; SOME ; DIG 7 ; UPDATE } { DIG 6 ; DROP ; DIG 4 } } ;
                             UPDATE 1 ;
                             UPDATE 1 ;
                             UPDATE 1 ;
                             UPDATE 2 ;
                             DUP 2 ;
                             CAR ;
                             UNIT ;
                             LEFT unit ;
                             PAIR ;
                             NOW ;
                             DUP 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             UNPAIR ;
                             IF_LEFT { DROP } { DROP ; DUP ; CAR ; SWAP ; CDR ; PAIR } ;
                             DUP 4 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             CAR ;
                             DUP 3 ;
                             CDR ;
                             DUP 4 ;
                             CAR ;
                             DUP 4 ;
                             UNPAIR ;
                             DUP ;
                             DUP 3 ;
                             COMPARE ;
                             GT ;
                             IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                             GET ;
                             IF_NONE { PUSH nat 0 } {} ;
                             GET ;
                             IF_NONE
                               { DROP 2 ;
                                 NONE (pair nat
                                            (or (or (pair (pair timestamp
                                                                (pair (pair nat nat nat)
                                                                      (or (or unit unit) unit)
                                                                      (pair nat nat nat nat)
                                                                      (pair (pair string string) (pair int int) timestamp)))
                                                          (pair (pair string string) (pair int int) timestamp))
                                                    (pair timestamp timestamp))
                                                timestamp)
                                            (pair nat nat nat nat nat nat nat nat)
                                            (pair string string)) }
                               { DUP ;
                                 GET 3 ;
                                 IF_LEFT
                                   { IF_LEFT { DROP ; PUSH bool True } { DROP ; PUSH bool False } }
                                   { DROP ; PUSH bool False } ;
                                 IF { SWAP ; DIG 2 ; DROP 2 }
                                    { DUP ;
                                      GET 3 ;
                                      IF_LEFT
                                        { DIG 2 ;
                                          DROP ;
                                          IF_LEFT
                                            { DROP 2 ;
                                              PUSH nat 0 ;
                                              DUP 3 ;
                                              CAR ;
                                              ITER { CDR ; DUP 2 ; DUP 2 ; COMPARE ; GT ; IF { SWAP ; DROP } { DROP } } ;
                                              PUSH nat 1 ;
                                              ADD ;
                                              SWAP ;
                                              PUSH nat 0 ;
                                              PUSH nat 0 ;
                                              PUSH nat 0 ;
                                              PUSH nat 0 ;
                                              PUSH nat 0 ;
                                              PUSH nat 0 ;
                                              PUSH nat 0 ;
                                              PUSH nat 0 ;
                                              PAIR 8 ;
                                              DUP 5 ;
                                              RIGHT
                                                (or (pair (pair timestamp
                                                                (pair (pair nat nat nat)
                                                                      (or (or unit unit) unit)
                                                                      (pair nat nat nat nat)
                                                                      (pair (pair string string) (pair int int) timestamp)))
                                                          (pair (pair string string) (pair int int) timestamp))
                                                    (pair timestamp timestamp)) ;
                                              DIG 3 ;
                                              PAIR 4 ;
                                              DUP 2 ;
                                              DUP 3 ;
                                              CDR ;
                                              DUP 3 ;
                                              SOME ;
                                              DUP 4 ;
                                              CAR ;
                                              UPDATE ;
                                              UPDATE 2 ;
                                              DIG 2 ;
                                              CAR ;
                                              DUP 3 ;
                                              CAR ;
                                              SOME ;
                                              DUP 4 ;
                                              GET 6 ;
                                              UNPAIR ;
                                              DUP ;
                                              DUP 3 ;
                                              COMPARE ;
                                              GT ;
                                              IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                                 { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                              UPDATE ;
                                              UPDATE 1 }
                                            { DIG 2 ; DROP 2 ; SWAP } }
                                        { DIG 3 ;
                                          DROP ;
                                          DUP 3 ;
                                          INT ;
                                          ADD ;
                                          DUP 5 ;
                                          COMPARE ;
                                          GE ;
                                          IF { DUP ;
                                               GET 3 ;
                                               IF_LEFT
                                                 { SWAP ;
                                                   DIG 2 ;
                                                   DROP 2 ;
                                                   IF_LEFT
                                                     { DROP ; PUSH nat 105 ; FAILWITH }
                                                     { DROP ; PUSH nat 105 ; FAILWITH } }
                                                 { DIG 2 ;
                                                   INT ;
                                                   DUP 2 ;
                                                   ADD ;
                                                   PAIR ;
                                                   RIGHT
                                                     (pair (pair timestamp
                                                                 (pair (pair nat nat nat)
                                                                       (or (or unit unit) unit)
                                                                       (pair nat nat nat nat)
                                                                       (pair (pair string string) (pair int int) timestamp)))
                                                           (pair (pair string string) (pair int int) timestamp)) ;
                                                   LEFT timestamp ;
                                                   UPDATE 3 } ;
                                               DUP 2 ;
                                               DUP 3 ;
                                               CDR ;
                                               DUP 3 ;
                                               SOME ;
                                               DUP 4 ;
                                               CAR ;
                                               UPDATE ;
                                               UPDATE 2 ;
                                               DIG 2 ;
                                               CAR ;
                                               DUP 3 ;
                                               CAR ;
                                               SOME ;
                                               DUP 4 ;
                                               GET 6 ;
                                               UNPAIR ;
                                               DUP ;
                                               DUP 3 ;
                                               COMPARE ;
                                               GT ;
                                               IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                                  { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                               UPDATE ;
                                               UPDATE 1 }
                                             { SWAP ; DROP ; SWAP } } ;
                                      SWAP } ;
                                 SOME } ;
                             IF_NONE
                               { SWAP ; DIG 3 ; DIG 4 ; DROP 4 }
                               { DUP ;
                                 GET 3 ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { DIG 3 ; DROP 2 ; PUSH bool False }
                                       { CAR ; PUSH int 120 ; ADD ; DIG 3 ; COMPARE ; GT } }
                                   { DIG 3 ; DROP 2 ; PUSH bool False } ;
                                 IF { NOW ;
                                      DUP 2 ;
                                      GET 5 ;
                                      DUP ;
                                      GET 9 ;
                                      INT ;
                                      DUP 2 ;
                                      GET 11 ;
                                      INT ;
                                      DUP 3 ;
                                      GET 13 ;
                                      INT ;
                                      DUP 4 ;
                                      CAR ;
                                      INT ;
                                      DUP 5 ;
                                      GET 3 ;
                                      INT ;
                                      DUP 6 ;
                                      GET 5 ;
                                      INT ;
                                      DIG 3 ;
                                      DIG 4 ;
                                      DIG 5 ;
                                      PAIR ;
                                      PAIR ;
                                      SWAP ;
                                      DIG 2 ;
                                      DIG 3 ;
                                      PAIR ;
                                      PAIR ;
                                      DUP 8 ;
                                      GET 3 ;
                                      DUP 2 ;
                                      CAR ;
                                      CAR ;
                                      DUP 4 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      DUP 5 ;
                                      DUP 15 ;
                                      DIG 4 ;
                                      DIG 4 ;
                                      DIG 4 ;
                                      ADD ;
                                      ADD ;
                                      PUSH int 1 ;
                                      SWAP ;
                                      PAIR ;
                                      DUP 2 ;
                                      CDR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DIG 2 ;
                                      CAR ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      PAIR ;
                                      DUP 2 ;
                                      CAR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DIG 2 ;
                                      CDR ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      PAIR ;
                                      PUSH int 1 ;
                                      DIG 2 ;
                                      PAIR ;
                                      DUP 2 ;
                                      CAR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DUP 3 ;
                                      CDR ;
                                      DUP 3 ;
                                      CAR ;
                                      MUL ;
                                      COMPARE ;
                                      LE ;
                                      IF { SWAP ; DROP } { DROP } ;
                                      DUP 3 ;
                                      CAR ;
                                      UNPAIR ;
                                      DUP 6 ;
                                      UNPAIR ;
                                      CDR ;
                                      DIG 3 ;
                                      DIG 3 ;
                                      ADD ;
                                      DUP 5 ;
                                      DIG 3 ;
                                      DIG 3 ;
                                      ADD ;
                                      PUSH int 1 ;
                                      SWAP ;
                                      PAIR ;
                                      DUP 2 ;
                                      CAR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DIG 2 ;
                                      CDR ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      PAIR ;
                                      PUSH int 1 ;
                                      DIG 2 ;
                                      PAIR ;
                                      DUP 2 ;
                                      CAR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DUP 3 ;
                                      CDR ;
                                      DUP 3 ;
                                      CAR ;
                                      MUL ;
                                      COMPARE ;
                                      LE ;
                                      IF { SWAP ; DROP } { DROP } ;
                                      DIG 3 ;
                                      UNPAIR ;
                                      UNPAIR ;
                                      DIG 6 ;
                                      CDR ;
                                      DUG 3 ;
                                      ADD ;
                                      ADD ;
                                      DUP 5 ;
                                      CDR ;
                                      DUP 13 ;
                                      CDR ;
                                      MUL ;
                                      DIG 5 ;
                                      CAR ;
                                      DUP 13 ;
                                      CAR ;
                                      MUL ;
                                      PAIR ;
                                      PUSH int 1 ;
                                      DIG 3 ;
                                      PAIR ;
                                      DUP 2 ;
                                      CAR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DIG 2 ;
                                      CDR ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      PAIR ;
                                      PUSH int 1 ;
                                      DIG 2 ;
                                      PAIR ;
                                      DUP 2 ;
                                      CAR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DUP 3 ;
                                      CDR ;
                                      DUP 3 ;
                                      CAR ;
                                      MUL ;
                                      COMPARE ;
                                      LE ;
                                      IF { SWAP ; DROP } { DROP } ;
                                      PUSH int 0 ;
                                      DUP 4 ;
                                      CAR ;
                                      COMPARE ;
                                      LT ;
                                      IF { PUSH int -1 ; DUP 4 ; CDR ; MUL ; PUSH int -1 ; DUP 5 ; CAR ; MUL ; PAIR }
                                         { DUP 3 } ;
                                      DUP ;
                                      CDR ;
                                      PUSH nat 1 ;
                                      PUSH nat 0 ;
                                      PUSH nat 10 ;
                                      PAIR ;
                                      PAIR ;
                                      LEFT nat ;
                                      LOOP_LEFT
                                        { UNPAIR ;
                                          UNPAIR ;
                                          PUSH nat 0 ;
                                          DUP 3 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                             { PUSH nat 1 ;
                                               PUSH nat 1 ;
                                               DUP 4 ;
                                               AND ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                               PUSH nat 1 ;
                                               DIG 3 ;
                                               LSR ;
                                               DUP 3 ;
                                               DIG 3 ;
                                               MUL ;
                                               PAIR ;
                                               PAIR ;
                                               LEFT nat } } ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR ;
                                      ISNAT ;
                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                      PUSH int 0 ;
                                      DUP 4 ;
                                      CAR ;
                                      COMPARE ;
                                      LT ;
                                      IF { PUSH int -1 ; DUP 4 ; CDR ; MUL ; PUSH int -1 ; DUP 5 ; CAR ; MUL ; PAIR }
                                         { DUP 3 } ;
                                      DUP ;
                                      CDR ;
                                      PUSH nat 1 ;
                                      PUSH nat 0 ;
                                      PUSH nat 10 ;
                                      PAIR ;
                                      PAIR ;
                                      LEFT nat ;
                                      LOOP_LEFT
                                        { UNPAIR ;
                                          UNPAIR ;
                                          PUSH nat 0 ;
                                          DUP 3 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                             { PUSH nat 1 ;
                                               PUSH nat 1 ;
                                               DUP 4 ;
                                               AND ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                               PUSH nat 1 ;
                                               DIG 3 ;
                                               LSR ;
                                               DUP 3 ;
                                               DIG 3 ;
                                               MUL ;
                                               PAIR ;
                                               PAIR ;
                                               LEFT nat } } ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR ;
                                      ISNAT ;
                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                      PUSH int 0 ;
                                      DUP 4 ;
                                      CAR ;
                                      COMPARE ;
                                      LT ;
                                      IF { PUSH int -1 ; DUP 4 ; CDR ; MUL ; PUSH int -1 ; DUP 5 ; CAR ; MUL ; PAIR }
                                         { DUP 3 } ;
                                      DUP ;
                                      CDR ;
                                      PUSH nat 1 ;
                                      PUSH nat 0 ;
                                      PUSH nat 10 ;
                                      PAIR ;
                                      PAIR ;
                                      LEFT nat ;
                                      LOOP_LEFT
                                        { UNPAIR ;
                                          UNPAIR ;
                                          PUSH nat 0 ;
                                          DUP 3 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                             { PUSH nat 1 ;
                                               PUSH nat 1 ;
                                               DUP 4 ;
                                               AND ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                               PUSH nat 1 ;
                                               DIG 3 ;
                                               LSR ;
                                               DUP 3 ;
                                               DIG 3 ;
                                               MUL ;
                                               PAIR ;
                                               PAIR ;
                                               LEFT nat } } ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR ;
                                      ISNAT ;
                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                      DUP 4 ;
                                      CAR ;
                                      DUP 7 ;
                                      CDR ;
                                      MUL ;
                                      DUP 5 ;
                                      CDR ;
                                      DUP 8 ;
                                      CAR ;
                                      MUL ;
                                      COMPARE ;
                                      LT ;
                                      NOT ;
                                      DUP 6 ;
                                      CAR ;
                                      DUP 8 ;
                                      CDR ;
                                      MUL ;
                                      DUP 7 ;
                                      CDR ;
                                      DUP 9 ;
                                      CAR ;
                                      MUL ;
                                      COMPARE ;
                                      LT ;
                                      NOT ;
                                      AND ;
                                      IF { DIG 3 ; DIG 4 ; DIG 5 ; DROP 3 ; UNIT ; RIGHT unit ; LEFT unit }
                                         { DUP 4 ;
                                           CAR ;
                                           DUP 6 ;
                                           CDR ;
                                           MUL ;
                                           DIG 4 ;
                                           CDR ;
                                           DUP 6 ;
                                           CAR ;
                                           MUL ;
                                           COMPARE ;
                                           LT ;
                                           NOT ;
                                           DUP 6 ;
                                           CAR ;
                                           DUP 6 ;
                                           CDR ;
                                           MUL ;
                                           DIG 6 ;
                                           CDR ;
                                           DIG 6 ;
                                           CAR ;
                                           MUL ;
                                           COMPARE ;
                                           LT ;
                                           NOT ;
                                           AND ;
                                           IF { UNIT ; LEFT unit ; LEFT unit } { UNIT ; RIGHT (or unit unit) } } ;
                                      DUP 10 ;
                                      PUSH nat 0 ;
                                      PUSH nat 0 ;
                                      PUSH nat 0 ;
                                      PUSH nat 0 ;
                                      PAIR 4 ;
                                      DIG 2 ;
                                      DIG 3 ;
                                      DIG 4 ;
                                      DIG 5 ;
                                      PAIR 3 ;
                                      PAIR 4 ;
                                      DUP ;
                                      GET 3 ;
                                      IF_LEFT
                                        { IF_LEFT
                                            { DROP ;
                                              DUP 2 ;
                                              GET 3 ;
                                              DUP 3 ;
                                              CAR ;
                                              ADD ;
                                              DUP 3 ;
                                              GET 13 ;
                                              DIG 3 ;
                                              GET 11 ;
                                              ADD ;
                                              SWAP }
                                            { DROP ;
                                              DUP 2 ;
                                              GET 13 ;
                                              DUP 3 ;
                                              GET 11 ;
                                              DUP 4 ;
                                              GET 9 ;
                                              ADD ;
                                              ADD ;
                                              DIG 2 ;
                                              CAR } }
                                        { DROP ;
                                          DUP 2 ;
                                          GET 5 ;
                                          DUP 3 ;
                                          GET 3 ;
                                          DUP 4 ;
                                          CAR ;
                                          ADD ;
                                          ADD ;
                                          DIG 2 ;
                                          GET 13 ;
                                          SWAP } ;
                                      DUP 3 ;
                                      GET 3 ;
                                      IF_LEFT
                                        { IF_LEFT
                                            { DIG 9 ; DROP 2 ; DUP 8 }
                                            { DROP ;
                                              DUP 8 ;
                                              GET 3 ;
                                              DUP 10 ;
                                              CAR ;
                                              DUP 2 ;
                                              CDR ;
                                              MUL ;
                                              DIG 10 ;
                                              CDR ;
                                              DIG 2 ;
                                              CAR ;
                                              MUL ;
                                              PAIR ;
                                              DUP 9 ;
                                              SWAP ;
                                              UPDATE 3 } }
                                        { DROP ;
                                          DUP 8 ;
                                          GET 3 ;
                                          DUP 10 ;
                                          CDR ;
                                          DUP 2 ;
                                          CDR ;
                                          MUL ;
                                          DIG 10 ;
                                          CAR ;
                                          DIG 2 ;
                                          CAR ;
                                          MUL ;
                                          PAIR ;
                                          DUP 9 ;
                                          SWAP ;
                                          UPDATE 3 } ;
                                      DUP 4 ;
                                      GET 3 ;
                                      IF_LEFT
                                        { IF_LEFT { DROP ; DUP 4 ; CAR ; GET 3 } { DROP ; DUP 4 ; CAR ; CAR } }
                                        { DROP ; DUP 4 ; CAR ; GET 4 } ;
                                      DUP 2 ;
                                      GET 3 ;
                                      DUP 2 ;
                                      INT ;
                                      PUSH int 1 ;
                                      SWAP ;
                                      PAIR ;
                                      DUP 2 ;
                                      CDR ;
                                      DUP 2 ;
                                      CDR ;
                                      MUL ;
                                      DIG 2 ;
                                      CAR ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      PAIR ;
                                      PUSH int 0 ;
                                      DUP 2 ;
                                      CAR ;
                                      COMPARE ;
                                      LT ;
                                      IF { PUSH int -1 ; DUP 2 ; CDR ; MUL ; PUSH int -1 ; DIG 2 ; CAR ; MUL ; PAIR }
                                         {} ;
                                      DUP ;
                                      CDR ;
                                      PUSH nat 1 ;
                                      PUSH nat 0 ;
                                      PUSH nat 10 ;
                                      PAIR ;
                                      PAIR ;
                                      LEFT nat ;
                                      LOOP_LEFT
                                        { UNPAIR ;
                                          UNPAIR ;
                                          PUSH nat 0 ;
                                          DUP 3 ;
                                          COMPARE ;
                                          EQ ;
                                          IF { DROP 2 ; RIGHT (pair (pair nat nat) nat) }
                                             { PUSH nat 1 ;
                                               PUSH nat 1 ;
                                               DUP 4 ;
                                               AND ;
                                               COMPARE ;
                                               EQ ;
                                               IF { DUP ; DIG 3 ; MUL } { DIG 2 } ;
                                               PUSH nat 1 ;
                                               DIG 3 ;
                                               LSR ;
                                               DUP 3 ;
                                               DIG 3 ;
                                               MUL ;
                                               PAIR ;
                                               PAIR ;
                                               LEFT nat } } ;
                                      DIG 2 ;
                                      CAR ;
                                      MUL ;
                                      EDIV ;
                                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                      CAR ;
                                      ISNAT ;
                                      IF_NONE { PUSH nat 119 ; FAILWITH } {} ;
                                      DIG 5 ;
                                      DIG 5 ;
                                      DIG 2 ;
                                      DIG 5 ;
                                      DIG 4 ;
                                      PAIR 4 ;
                                      UPDATE 5 ;
                                      SWAP ;
                                      UPDATE 6 ;
                                      DIG 2 ;
                                      DIG 5 ;
                                      DIG 2 ;
                                      DIG 3 ;
                                      PAIR ;
                                      PAIR ;
                                      LEFT (pair timestamp timestamp) ;
                                      LEFT timestamp ;
                                      UPDATE 3 ;
                                      DUP 2 ;
                                      DUP 3 ;
                                      CDR ;
                                      DUP 3 ;
                                      SOME ;
                                      DUP 4 ;
                                      CAR ;
                                      UPDATE ;
                                      UPDATE 2 ;
                                      DIG 2 ;
                                      CAR ;
                                      DUP 3 ;
                                      CAR ;
                                      SOME ;
                                      DIG 3 ;
                                      GET 6 ;
                                      UNPAIR ;
                                      DUP ;
                                      DUP 3 ;
                                      COMPARE ;
                                      GT ;
                                      IF { PUSH string "/" ; CONCAT ; SWAP ; CONCAT }
                                         { SWAP ; PUSH string "/" ; CONCAT ; SWAP ; CONCAT } ;
                                      UPDATE ;
                                      UPDATE 1 }
                                    { DIG 3 ; DIG 4 ; DROP 3 } ;
                                 DUP 2 ;
                                 DIG 2 ;
                                 CAR ;
                                 DUP ;
                                 CAR ;
                                 DUP ;
                                 CAR ;
                                 DIG 4 ;
                                 UPDATE 2 ;
                                 UPDATE 1 ;
                                 UPDATE 1 ;
                                 UPDATE 1 } ;
                             NIL operation ;
                             PAIR } } } } } } ;
  view "get_fee_in_mutez" unit mutez { CDR ; CAR ; CAR ; CDR ; CDR } ;
  view "get_valid_swaps"
       unit
       (map string
            (pair (pair %swap (string %from) (string %to))
                  (address %oracle_address)
                  (string %oracle_asset_name)
                  (nat %oracle_precision)
                  (bool %is_disabled_for_deposits)))
       { CDR ; CDR ; CAR ; CDR ; CDR } ;
  view "get_valid_tokens"
       unit
       (map string
            (pair (nat %token_id)
                  (string %name)
                  (option %address address)
                  (nat %decimals)
                  (option %standard string)))
       { CDR ; CDR ; CDR } ;
  view "get_current_batches"
       unit
       (list (pair (nat %batch_number)
                   (or %status
                      (or (pair %cleared
                             (pair (timestamp %at)
                                   (pair %clearing
                                      (pair %clearing_volumes (nat %minus) (nat %exact) (nat %plus))
                                      (or %clearing_tolerance (or (unit %exact) (unit %minus)) (unit %plus))
                                      (pair %total_cleared_volumes
                                         (nat %buy_side_total_cleared_volume)
                                         (nat %buy_side_volume_subject_to_clearing)
                                         (nat %sell_side_total_cleared_volume)
                                         (nat %sell_side_volume_subject_to_clearing))
                                      (pair %clearing_rate
                                         (pair %swap (string %from) (string %to))
                                         (pair %rate (int %p) (int %q))
                                         (timestamp %when))))
                             (pair %rate
                                (pair %swap (string %from) (string %to))
                                (pair %rate (int %p) (int %q))
                                (timestamp %when)))
                          (pair %closed (timestamp %closing_time) (timestamp %start_time)))
                      (timestamp %open))
                   (pair %volumes
                      (nat %buy_minus_volume)
                      (nat %buy_exact_volume)
                      (nat %buy_plus_volume)
                      (nat %buy_total_volume)
                      (nat %sell_minus_volume)
                      (nat %sell_exact_volume)
                      (nat %sell_plus_volume)
                      (nat %sell_total_volume))
                   (pair %pair string string)
                   (nat %holdings)))
       { CDR ;
         NIL (pair nat
                   (or (or (pair (pair timestamp
                                       (pair (pair nat nat nat)
                                             (or (or unit unit) unit)
                                             (pair nat nat nat nat)
                                             (pair (pair string string) (pair int int) timestamp)))
                                 (pair (pair string string) (pair int int) timestamp))
                           (pair timestamp timestamp))
                       timestamp)
                   (pair nat nat nat nat nat nat nat nat)
                   (pair string string)
                   nat) ;
         DUP 2 ;
         CAR ;
         CAR ;
         CAR ;
         CDR ;
         CAR ;
         ITER { CDR ;
                DUP 3 ;
                CAR ;
                CAR ;
                CAR ;
                CDR ;
                CDR ;
                SWAP ;
                GET ;
                IF_NONE {} { CONS } } ;
         SWAP ;
         DROP } }

